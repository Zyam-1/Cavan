/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagTestDefinitions'')     AND name = ''PrintRefRange'')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD PrintRefRange tinyint NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagTestDefinitions'')     AND name = ''PrintRefRange'')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD PrintRefRange tinyint NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''UserName'')   BEGIN     ALTER TABLE GenericResults     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''UserName'')   BEGIN     ALTER TABLE GenericResults     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE GenericResults     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE GenericResults     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''Valid'')   BEGIN     ALTER TABLE GenericResults     ADD Valid tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''Valid'')   BEGIN     ALTER TABLE GenericResults     ADD Valid tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''ValidatedBy'')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''ValidatedBy'')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''UserName'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''UserName'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''Department'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD Department nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''Department'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD Department nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''eAddress'')     AND name = ''ListOrder'')   BEGIN     ALTER TABLE eAddress     ADD ListOrder int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''eAddress'')     AND name = ''ListOrder'')   BEGIN     ALTER TABLE eAddress     ADD ListOrder int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''eAddress'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE eAddress     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''eAddress'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE eAddress     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''eAddress'')     AND name = ''UserName'')   BEGIN     ALTER TABLE eAddress     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''eAddress'')     AND name = ''UserName'')   BEGIN     ALTER TABLE eAddress     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Sensitivities'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE Sensitivities     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Sensitivities'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE Sensitivities     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Reports'')     AND name = ''Hidden'')   BEGIN     ALTER TABLE Reports     ADD Hidden tinyint NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Reports'')     AND name = ''Hidden'')   BEGIN     ALTER TABLE Reports     ADD Hidden tinyint NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''PrintedDateTime'')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''PrintedDateTime'')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''ValidatedBy'')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''ValidatedBy'')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''PrintedBy'')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''PrintedBy'')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioTestDefinitions'')     AND name = ''HealthLinkPanel'')   BEGIN     ALTER TABLE BioTestDefinitions     ADD HealthLinkPanel nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioTestDefinitions'')     AND name = ''HealthLinkPanel'')   BEGIN     ALTER TABLE BioTestDefinitions     ADD HealthLinkPanel nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRequests'')     AND name = ''AddOn'')   BEGIN     ALTER TABLE BioRequests     ADD AddOn bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRequests'')     AND name = ''AddOn'')   BEGIN     ALTER TABLE BioRequests     ADD AddOn bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PhoneLog'')     AND name = ''Direction'')   BEGIN     ALTER TABLE PhoneLog     ADD Direction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PhoneLog'')     AND name = ''Direction'')   BEGIN     ALTER TABLE PhoneLog     ADD Direction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Antibiotics'')     AND name = ''ViewInGrid'')   BEGIN     ALTER TABLE Antibiotics     ADD ViewInGrid bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Antibiotics'')     AND name = ''ViewInGrid'')   BEGIN     ALTER TABLE Antibiotics     ADD ViewInGrid bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPs'')     AND name = ''PrintReport'')   BEGIN     ALTER TABLE GPs     ADD PrintReport bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPs'')     AND name = ''PrintReport'')   BEGIN     ALTER TABLE GPs     ADD PrintReport bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPs'')     AND name = ''Interim'')   BEGIN     ALTER TABLE GPs     ADD Interim bit NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPs'')     AND name = ''Interim'')   BEGIN     ALTER TABLE GPs     ADD Interim bit NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Counter'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Counter numeric(18, 0) IDENTITY(1,1) NOT NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Counter'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Counter numeric(18, 0) IDENTITY(1,1) NOT NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Analyte'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Analyte nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Analyte'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Analyte nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Chart'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Chart nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Chart'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Chart nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''FileName'')   BEGIN     ALTER TABLE MedibridgeResults     ADD FileName nvarchar(500) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''FileName'')   BEGIN     ALTER TABLE MedibridgeResults     ADD FileName nvarchar(500) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Units'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Units nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Units'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Units nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Demographics'')     AND name = ''MicroHealthLinkReleaseTime'')   BEGIN     ALTER TABLE Demographics     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Demographics'')     AND name = ''MicroHealthLinkReleaseTime'')   BEGIN     ALTER TABLE Demographics     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''DemographicsAudit'')     AND name = ''MicroHealthLinkReleaseTime'')   BEGIN     ALTER TABLE DemographicsAudit     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''DemographicsAudit'')     AND name = ''MicroHealthLinkReleaseTime'')   BEGIN     ALTER TABLE DemographicsAudit     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''BiomnisCode'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD BiomnisCode nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''BiomnisCode'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD BiomnisCode nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''AnalyserTestCodeMapping'')     AND name = ''Department'')   BEGIN     ALTER TABLE AnalyserTestCodeMapping     ADD Department nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''AnalyserTestCodeMapping'')     AND name = ''Department'')   BEGIN     ALTER TABLE AnalyserTestCodeMapping     ADD Department nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BIOTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BIOTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioTestDefinitionsArc'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE BioTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioTestDefinitionsArc'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE BioTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''EndTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE EndTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''EndTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE EndTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''EndTestDefinitionsArc'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE EndTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''EndTestDefinitionsArc'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE EndTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE ImmTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE ImmTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmTestDefinitionsArc'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE ImmTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmTestDefinitionsArc'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE ImmTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureListEntryExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureListEntryExists',            '30',            'IF NOT EXISTS     (SELECT * FROM Lists WHERE     Code = ''B''     AND Text = ''Biomnis''     AND ListType = ''AC'')   BEGIN     INSERT INTO Lists (Code, Text, ListType, InUse, ListOrder)     VALUES (''B'', ''Biomnis'', ''AC'', ''1'', 999)   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM Lists WHERE     Code = ''B''     AND Text = ''Biomnis''     AND ListType = ''AC'')   BEGIN     INSERT INTO Lists (Code, Text, ListType, InUse, ListOrder)     VALUES (''B'', ''Biomnis'', ''AC'', ''1'', 999)   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureListEntryExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE CoagResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE CoagResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE HaemRepeats50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE HaemRepeats50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRequestsAudit'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioRequestsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRequestsAudit'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioRequestsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BIOTestDefinitions'')     AND name = ''HealthLink'')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD HealthLink Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BIOTestDefinitions'')     AND name = ''HealthLink'')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD HealthLink Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BIOTestDefinitions'')     AND name = ''Accredited'')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD Accredited Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BIOTestDefinitions'')     AND name = ''Accredited'')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD Accredited Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE HaemResults50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE HaemResults50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''demographics'')     AND name = ''LabNo'')   BEGIN     ALTER TABLE demographics     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''demographics'')     AND name = ''LabNo'')   BEGIN     ALTER TABLE demographics     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''demographicsAudit'')     AND name = ''LabNo'')   BEGIN     ALTER TABLE demographicsAudit     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''demographicsAudit'')     AND name = ''LabNo'')   BEGIN     ALTER TABLE demographicsAudit     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''MedRenal'')   BEGIN     ALTER TABLE BioRepeats     ADD MedRenal tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''MedRenal'')   BEGIN     ALTER TABLE BioRepeats     ADD MedRenal tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE BioRepeats     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE BioRepeats     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE BioResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE BioResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioRepeats     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioRepeats     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRequests'')     AND name = ''GBottle'')   BEGIN     ALTER TABLE BioRequests     ADD GBottle Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRequests'')     AND name = ''GBottle'')   BEGIN     ALTER TABLE BioRequests     ADD GBottle Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemResults50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemResults50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''TempHaem'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE TempHaem     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''TempHaem'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE TempHaem     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''TempHaem'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE TempHaem     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''TempHaem'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE TempHaem     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''TempHaem'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE TempHaem     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''TempHaem'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE TempHaem     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE BioResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE BioResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE BioResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE BioResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE BioResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE BioResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE BioRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE BioRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE CoagResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE CoagResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE CoagResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE CoagResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE CoagResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE CoagResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE ImmResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE ImmResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE ImmResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE ImmResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE ImmResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE ImmResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLog'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLog'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLog'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLog'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLog'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLog'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLogArc'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLogArc'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLogArc'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLogArc'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLogArc'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLogArc'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesRequests50'')     AND name = ''Analyser'')   BEGIN     ALTER TABLE FaecesRequests50     ADD Analyser nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesRequests50'')     AND name = ''Analyser'')   BEGIN     ALTER TABLE FaecesRequests50     ADD Analyser nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesRequests50'')     AND name = ''Programmed'')   BEGIN     ALTER TABLE FaecesRequests50     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesRequests50'')     AND name = ''Programmed'')   BEGIN     ALTER TABLE FaecesRequests50     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ViewedReports'')     AND name = ''Usercode'')   BEGIN     ALTER TABLE ViewedReports     ADD Usercode nvarchar(5)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ViewedReports'')     AND name = ''Usercode'')   BEGIN     ALTER TABLE ViewedReports     ADD Usercode nvarchar(5)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemTestDefinitions'')     AND name = ''KnownToAnalyser'')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD KnownToAnalyser bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemTestDefinitions'')     AND name = ''KnownToAnalyser'')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD KnownToAnalyser bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintPending'')     AND name = ''PrintAction'')   BEGIN     ALTER TABLE PrintPending     ADD PrintAction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintPending'')     AND name = ''PrintAction'')   BEGIN     ALTER TABLE PrintPending     ADD PrintAction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPOrders'')     AND name = ''Programmed'')   BEGIN     ALTER TABLE GPOrders     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPOrders'')     AND name = ''Programmed'')   BEGIN     ALTER TABLE GPOrders     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPOrders'')     AND name = ''SampleDate'')   BEGIN     ALTER TABLE GPOrders     ADD SampleDate datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPOrders'')     AND name = ''SampleDate'')   BEGIN     ALTER TABLE GPOrders     ADD SampleDate datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PhoneAlert'')     AND name = ''PhoneAlertDateTime'')   BEGIN     ALTER TABLE PhoneAlert     ADD PhoneAlertDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PhoneAlert'')     AND name = ''PhoneAlertDateTime'')   BEGIN     ALTER TABLE PhoneAlert     ADD PhoneAlertDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Reports'')     AND name = ''ReportType'')   BEGIN     ALTER TABLE Reports     ADD ReportType nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Reports'')     AND name = ''ReportType'')   BEGIN     ALTER TABLE Reports     ADD ReportType nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''ScanViewLog''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''ScanViewLog''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckScanViewLogInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckScanViewLogInDb',            '40',            'CREATE TABLE [dbo].[ScanViewLog]( [SampleID] [nvarchar](50) NULL, [ScanName] [nvarchar](50) NULL, [Department] [nvarchar](50) NULL, [Viewed] [int] NULL, [Username] [nvarchar](50) NULL, [DateTimeOfRecord] [datetime] NULL, [Counter] [int] IDENTITY(1,1) NOT NULL ) ON [PRIMARY]',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[ScanViewLog]( [SampleID] [nvarchar](50) NULL, [ScanName] [nvarchar](50) NULL, [Department] [nvarchar](50) NULL, [Viewed] [int] NULL, [Username] [nvarchar](50) NULL, [DateTimeOfRecord] [datetime] NULL, [Counter] [int] IDENTITY(1,1) NOT NULL ) ON [PRIMARY]',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckScanViewLogInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''UserProfiles''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''UserProfiles''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckUserProfilesInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckUserProfilesInDb',            '40',            'CREATE TABLE UserProfiles ( ProfileName nvarchar(50),   ProfileFunction nvarchar(50),   UserName nvarchar(50),   DateTimeOfRecord datetime DEFAULT getdate() )',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE UserProfiles ( ProfileName nvarchar(50),   ProfileFunction nvarchar(50),   UserName nvarchar(50),   DateTimeOfRecord datetime DEFAULT getdate() )',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckUserProfilesInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''POCTResults''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''POCTResults''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckPOCTResultsInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckPOCTResultsInDb',            '40',            'CREATE TABLE [dbo].[POCTResults](   [Parameter] [nvarchar](50) NULL,   [Result] [nvarchar](100) NULL,   [Units] [nvarchar](50) NULL,   [PatientUI] [nvarchar](50) NULL,   [DateTimeOfRecord] [datetime] NOT NULL DEFAULT getdate(),   [Chart] [nvarchar](50) NULL,   [FileName] [nvarchar](100) NULL )',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[POCTResults](   [Parameter] [nvarchar](50) NULL,   [Result] [nvarchar](100) NULL,   [Units] [nvarchar](50) NULL,   [PatientUI] [nvarchar](50) NULL,   [DateTimeOfRecord] [datetime] NOT NULL DEFAULT getdate(),   [Chart] [nvarchar](50) NULL,   [FileName] [nvarchar](100) NULL )',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckPOCTResultsInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''POCTPatientLive''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''POCTPatientLive''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckPOCTPatientLiveInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckPOCTPatientLiveInDb',            '40',            'CREATE TABLE [dbo].[POCTPatientLive](   [Chart] [nvarchar](50) NULL,   [ForeName] [nvarchar](50) NULL,   [Surname] [nvarchar](50) NULL,   [AlternateID] [nvarchar](50) NULL,   [AccountNo] [nvarchar](50) NULL,   [Visit] [nvarchar](50) NULL,   [Sex] [nvarchar](50) NULL,   [DoB] [smalldatetime] NULL,   [Location] [nvarchar](50) NULL,   [Doctor] [nvarchar](50) NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[POCTPatientLive](   [Chart] [nvarchar](50) NULL,   [ForeName] [nvarchar](50) NULL,   [Surname] [nvarchar](50) NULL,   [AlternateID] [nvarchar](50) NULL,   [AccountNo] [nvarchar](50) NULL,   [Visit] [nvarchar](50) NULL,   [Sex] [nvarchar](50) NULL,   [DoB] [smalldatetime] NULL,   [Location] [nvarchar](50) NULL,   [Doctor] [nvarchar](50) NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckPOCTPatientLiveInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''POCTPatients''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''POCTPatients''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckPOCTPatientsInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckPOCTPatientsInDb',            '40',            'CREATE TABLE [dbo].[POCTPatients](   [Chart] [nvarchar](50) NULL,   [ForeName] [nvarchar](50) NULL,   [Surname] [nvarchar](50) NULL,   [AlternateID] [nvarchar](50) NULL,   [AccountNo] [nvarchar](50) NULL,   [Visit] [nvarchar](50) NULL,   [Sex] [nvarchar](50) NULL,   [DoB] [smalldatetime] NULL,   [Location] [nvarchar](50) NULL,   [Doctor] [nvarchar](50) NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[POCTPatients](   [Chart] [nvarchar](50) NULL,   [ForeName] [nvarchar](50) NULL,   [Surname] [nvarchar](50) NULL,   [AlternateID] [nvarchar](50) NULL,   [AccountNo] [nvarchar](50) NULL,   [Visit] [nvarchar](50) NULL,   [Sex] [nvarchar](50) NULL,   [DoB] [smalldatetime] NULL,   [Location] [nvarchar](50) NULL,   [Doctor] [nvarchar](50) NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckPOCTPatientsInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''POCTPatientTemp''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''POCTPatientTemp''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckPOCTPatientTempInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckPOCTPatientTempInDb',            '40',            'CREATE TABLE [dbo].[POCTPatientTemp](   [Chart] [nvarchar](50) NULL,   [ForeName] [nvarchar](50) NULL,   [Surname] [nvarchar](50) NULL,   [AlternateID] [nvarchar](50) NULL,   [AccountNo] [nvarchar](50) NULL,   [Visit] [nvarchar](50) NULL,   [Sex] [nvarchar](50) NULL,   [DoB] [smalldatetime] NULL,   [Location] [nvarchar](50) NULL,   [Doctor] [nvarchar](50) NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[POCTPatientTemp](   [Chart] [nvarchar](50) NULL,   [ForeName] [nvarchar](50) NULL,   [Surname] [nvarchar](50) NULL,   [AlternateID] [nvarchar](50) NULL,   [AccountNo] [nvarchar](50) NULL,   [Visit] [nvarchar](50) NULL,   [Sex] [nvarchar](50) NULL,   [DoB] [smalldatetime] NULL,   [Location] [nvarchar](50) NULL,   [Doctor] [nvarchar](50) NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckPOCTPatientTempInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''LIHValues''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''LIHValues''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckLIHValuesInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckLIHValuesInDb',            '40',            'CREATE TABLE [dbo].[LIHValues](   [LIH] nvarchar(50) NOT NULL,   [Code] nvarchar(50) NOT NULL,   [CutOff] real NOT NULL DEFAULT 0,   [NoPrintOrWarning] nvarchar(50) NOT NULL,   [UserName] nvarchar(50) NOT NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[LIHValues](   [LIH] nvarchar(50) NOT NULL,   [Code] nvarchar(50) NOT NULL,   [CutOff] real NOT NULL DEFAULT 0,   [NoPrintOrWarning] nvarchar(50) NOT NULL,   [UserName] nvarchar(50) NOT NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckLIHValuesInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''IncludeAutoValUrine''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''IncludeAutoValUrine''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckIncludeAutoValUrineInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckIncludeAutoValUrineInDb',            '40',            'CREATE TABLE [IncludeAutoValUrine] ([SourceType] [nvarchar] (50) NOT NULL, [Hospital] [nvarchar] (50) NOT NULL, [SourceName] [nvarchar] (50) NOT NULL, [Include] [bit] NOT NULL DEFAULT 0, [Counter] [numeric](18, 0) IDENTITY (1, 1) NOT NULL )',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [IncludeAutoValUrine] ([SourceType] [nvarchar] (50) NOT NULL, [Hospital] [nvarchar] (50) NOT NULL, [SourceName] [nvarchar] (50) NOT NULL, [Include] [bit] NOT NULL DEFAULT 0, [Counter] [numeric](18, 0) IDENTITY (1, 1) NOT NULL )',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckIncludeAutoValUrineInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''UserRole''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''UserRole''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckUserRoleInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckUserRoleInDb',            '40',            'CREATE TABLE [dbo].[UserRole]( [MemberOf] [nvarchar](50) NULL, [SystemRole] [nvarchar](50) NULL, [Description] [nvarchar](50) NULL, [Enabled] [tinyint] NULL, [Username] [nvarchar](50) NULL, [DateTimeOfRecord] [datetime] NULL, [Counter] [int] IDENTITY(1,1) NOT NULL ) ON [PRIMARY]',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[UserRole]( [MemberOf] [nvarchar](50) NULL, [SystemRole] [nvarchar](50) NULL, [Description] [nvarchar](50) NULL, [Enabled] [tinyint] NULL, [Username] [nvarchar](50) NULL, [DateTimeOfRecord] [datetime] NULL, [Counter] [int] IDENTITY(1,1) NOT NULL ) ON [PRIMARY]',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckUserRoleInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''GPOrders''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''GPOrders''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckGPOrdersInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckGPOrdersInDb',            '40',            'CREATE TABLE GPOrders (  ShortName nvarchar(20) NULL,LongName nvarchar(50) NULL,ClinicalDetails nvarchar(20) NULL,SampleTypeCode nvarchar(20) NULL,SampleType nvarchar(50) NULL,Priority nvarchar(10) NULL,GID nvarchar(50) NULL,FileName nvarchar(50) NULL,SampleIDExternal nvarchar(50) NULL, SampleDate [datetime] NULL )',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE GPOrders (  ShortName nvarchar(20) NULL,LongName nvarchar(50) NULL,ClinicalDetails nvarchar(20) NULL,SampleTypeCode nvarchar(20) NULL,SampleType nvarchar(50) NULL,Priority nvarchar(10) NULL,GID nvarchar(50) NULL,FileName nvarchar(50) NULL,SampleIDExternal nvarchar(50) NULL, SampleDate [datetime] NULL )',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckGPOrdersInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''GPOrderPatient''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''GPOrderPatient''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckGPOrderPatientInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckGPOrderPatientInDb',            '40',            'CREATE TABLE GPOrderPatient (  [GPName] [nvarchar](20) NULL, [GPNumber] [nvarchar](10) NULL, [DateTimeOfMessage] [datetime] NULL, [PatientID] [nvarchar](10) NULL, [PatientSurName] [nvarchar](20) NULL, [PatientForeName] [nvarchar](20) NULL, [DoB] [date] NULL, [Sex] [nvarchar](6) NULL, [Addr1] [nvarchar](20) NULL, [Addr2] [nvarchar](20) NULL, [Addr3] [nvarchar](20) NULL, [Addr4] [nvarchar](20) NULL, [Addr5] [nvarchar](20) NULL, [PracticeID] [nvarchar](10) NULL, [GPSurName] [nvarchar](20) NULL, [GPForeName] [nvarchar](20) NULL, [Pregnant] [nvarchar](25) NULL, [GID] [nvarchar](50) NULL, [FileName] [nvarchar](50) NULL, [SampleIDExternal] [nvarchar](50) NULL )',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE GPOrderPatient (  [GPName] [nvarchar](20) NULL, [GPNumber] [nvarchar](10) NULL, [DateTimeOfMessage] [datetime] NULL, [PatientID] [nvarchar](10) NULL, [PatientSurName] [nvarchar](20) NULL, [PatientForeName] [nvarchar](20) NULL, [DoB] [date] NULL, [Sex] [nvarchar](6) NULL, [Addr1] [nvarchar](20) NULL, [Addr2] [nvarchar](20) NULL, [Addr3] [nvarchar](20) NULL, [Addr4] [nvarchar](20) NULL, [Addr5] [nvarchar](20) NULL, [PracticeID] [nvarchar](10) NULL, [GPSurName] [nvarchar](20) NULL, [GPForeName] [nvarchar](20) NULL, [Pregnant] [nvarchar](25) NULL, [GID] [nvarchar](50) NULL, [FileName] [nvarchar](50) NULL, [SampleIDExternal] [nvarchar](50) NULL )',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckGPOrderPatientInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''GpordersProfile''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''GpordersProfile''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckGpordersProfileInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckGpordersProfileInDb',            '40',            'CREATE TABLE GpordersProfile(GPTestCode nvarchar(200) NULL, GPTestName nvarchar(200) NULL, Department nvarchar(200) NULL, NetAcquirePanel nvarchar(200) NULL, Counter int NULL, Panel bit NULL )',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE GpordersProfile(GPTestCode nvarchar(200) NULL, GPTestName nvarchar(200) NULL, Department nvarchar(200) NULL, NetAcquirePanel nvarchar(200) NULL, Counter int NULL, Panel bit NULL )',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckGpordersProfileInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''HaePanels''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''HaePanels''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckHaePanelsInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckHaePanelsInDb',            '40',            'CREATE TABLE [dbo].[HaePanels](  [PanelName] [nvarchar](50) NULL,  [Content] [nvarchar](50) NULL,  [BarCode] [nvarchar](20) NULL,  [PanelType] [nvarchar](2) NULL,  [Hospital] [char](10) NULL,  [ListOrder] [int] NULL  ) ON [PRIMARY]',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[HaePanels](  [PanelName] [nvarchar](50) NULL,  [Content] [nvarchar](50) NULL,  [BarCode] [nvarchar](20) NULL,  [PanelType] [nvarchar](2) NULL,  [Hospital] [char](10) NULL,  [ListOrder] [int] NULL  ) ON [PRIMARY]',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckHaePanelsInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:49 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''DemographicsUniLabNo''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''DemographicsUniLabNo''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckDemographicsUniLabNoInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckDemographicsUniLabNoInDb',            '40',            'CREATE TABLE [dbo].[DemographicsUniLabNo] ([SampleID] [nvarchar](20) NOT NULL, [DateTimeOfRecord] [datetime] NOT NULL, [User] [nvarchar](200) NOT NULL, [PatName] [nvarchar](200) NOT NULL, [DoB] [datetime] NOT NULL, [Sex] [nvarchar](10) NOT NULL, [Chart] [nvarchar](20), [LabNo] [numeric](18, 0) )ON [PRIMARY]',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[DemographicsUniLabNo] ([SampleID] [nvarchar](20) NOT NULL, [DateTimeOfRecord] [datetime] NOT NULL, [User] [nvarchar](200) NOT NULL, [PatName] [nvarchar](200) NOT NULL, [DoB] [datetime] NOT NULL, [Sex] [nvarchar](10) NOT NULL, [Chart] [nvarchar](20), [LabNo] [numeric](18, 0) )ON [PRIMARY]',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckDemographicsUniLabNoInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'frmMain'      AND ProcedureName = 'AdjustLIH'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('frmMain',            'AdjustLIH',            '40',            'SELECT TOP 50 * FROM Masks WHERE LIH IS NULL',            'The connection cannot be used to perform this operation. It is either closed or invalid in this context.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT TOP 50 * FROM Masks WHERE LIH IS NULL',   ErrorDescription = 'The connection cannot be used to perform this operation. It is either closed or invalid in this context.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'frmMain'   AND ProcedureName = 'AdjustLIH'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modOptions'      AND ProcedureName = 'LoadOptions'      AND ErrorLineNumber = '70'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modOptions',            'LoadOptions',            '70',            'Select * from Options order by ListOrder',            'The connection cannot be used to perform this operation. It is either closed or invalid in this context.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'Select * from Options order by ListOrder',   ErrorDescription = 'The connection cannot be used to perform this operation. It is either closed or invalid in this context.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modOptions'   AND ProcedureName = 'LoadOptions'   AND ErrorLineNumber = '70'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'Shared'      AND ProcedureName = 'FillInterpTable'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('Shared',            'FillInterpTable',            '40',            'select * from interp',            'The connection cannot be used to perform this operation. It is either closed or invalid in this context.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'select * from interp',   ErrorDescription = 'The connection cannot be used to perform this operation. It is either closed or invalid in this context.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'Shared'   AND ProcedureName = 'FillInterpTable'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''DemogValidation''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''DemogValidation''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''BiomnisRequests''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''BiomnisRequests''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckBiomnisRequestInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckBiomnisRequestInDb',            '40',            'CREATE TABLE [dbo].[BiomnisRequests]( [SampleID] [nvarchar](50) NOT NULL, [TestCode] [nvarchar](50) NOT NULL, [TestName] [nvarchar](50) NULL, [SampleType] [nvarchar](50) NULL, [SampleDateTime] [datetime] NULL, [Department] [nvarchar](50) NULL, [RequestedBy] [nvarchar](50) NULL, [SendTo] [nvarchar](200) NULL, [Status] [nvarchar](50) NULL, DateTimeOfRecord datetime NOT NULL DEFAULT getdate() ) ON [PRIMARY]',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[BiomnisRequests]( [SampleID] [nvarchar](50) NOT NULL, [TestCode] [nvarchar](50) NOT NULL, [TestName] [nvarchar](50) NULL, [SampleType] [nvarchar](50) NULL, [SampleDateTime] [datetime] NULL, [Department] [nvarchar](50) NULL, [RequestedBy] [nvarchar](50) NULL, [SendTo] [nvarchar](200) NULL, [Status] [nvarchar](50) NULL, DateTimeOfRecord datetime NOT NULL DEFAULT getdate() ) ON [PRIMARY]',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckBiomnisRequestInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''ConsultantListLog''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''ConsultantListLog''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckConsultantListInDb'      AND ErrorLineNumber = '0'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckConsultantListInDb',            '0',            'CREATE TABLE [dbo].[ConsultantListLog]( [SampleID] [nvarchar](50) NOT NULL, [UserName] [nvarchar](50) NOT NULL, [Status] [nvarchar](50) NULL, DateTimeOfRecord datetime NOT NULL DEFAULT getdate() ) ON [PRIMARY]',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[ConsultantListLog]( [SampleID] [nvarchar](50) NOT NULL, [UserName] [nvarchar](50) NOT NULL, [Status] [nvarchar](50) NULL, DateTimeOfRecord datetime NOT NULL DEFAULT getdate() ) ON [PRIMARY]',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckConsultantListInDb'   AND ErrorLineNumber = '0'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'IsTableInDatabase'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'IsTableInDatabase',            '30',            'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''MicroAutoCommentAlert''',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT name FROM sysobjects WHERE xtype = ''U'' AND name = ''MicroAutoCommentAlert''',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'IsTableInDatabase'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckMicroAutoCommentAlertInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckMicroAutoCommentAlertInDb',            '40',            'CREATE TABLE [dbo].[MicroAutoCommentAlert]( [OrganismName] [nvarchar](100) NOT NULL, [Site] [nvarchar](50) NULL, [PatientLocation] [nvarchar](100) NULL, [PatientAgeFrom] [int] NULL, [PatientAgeTo] [int] NULL, [DateStart] [smalldatetime] NULL, [DateEnd] [smalldatetime] NULL, [Comment] [nvarchar](95) NULL, [PhoneAlert] [bit] NULL, [PhoneAlertDateTime] [datetime] NULL, [ListOrder] [int] NOT NULL, [Counter] [int] IDENTITY(1,1) NOT NULL ) ON [PRIMARY]',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[MicroAutoCommentAlert]( [OrganismName] [nvarchar](100) NOT NULL, [Site] [nvarchar](50) NULL, [PatientLocation] [nvarchar](100) NULL, [PatientAgeFrom] [int] NULL, [PatientAgeTo] [int] NULL, [DateStart] [smalldatetime] NULL, [DateEnd] [smalldatetime] NULL, [Comment] [nvarchar](95) NULL, [PhoneAlert] [bit] NULL, [PhoneAlertDateTime] [datetime] NULL, [ListOrder] [int] NOT NULL, [Counter] [int] IDENTITY(1,1) NOT NULL ) ON [PRIMARY]',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckMicroAutoCommentAlertInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:52 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modOptionSettings'      AND ProcedureName = 'GetOptionSetting'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modOptionSettings',            'GetOptionSetting',            '40',            'SELECT Contents FROM Options WHERE Description = ''LogOnShowName''',            'The connection cannot be used to perform this operation. It is either closed or invalid in this context.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT Contents FROM Options WHERE Description = ''LogOnShowName''',   ErrorDescription = 'The connection cannot be used to perform this operation. It is either closed or invalid in this context.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modOptionSettings'   AND ProcedureName = 'GetOptionSetting'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:41:52 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'frmLogOn'      AND ProcedureName = 'FillUserNames'      AND ErrorLineNumber = '50'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('frmLogOn',            'FillUserNames',            '50',            'SELECT Name FROM Users WHERE MemberOf = ''Administrators'' OR MemberOf = ''Managers'' OR MemberOf = ''Users'' AND InUse = 1 ORDER BY ListOrder',            'The connection cannot be used to perform this operation. It is either closed or invalid in this context.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT Name FROM Users WHERE MemberOf = ''Administrators'' OR MemberOf = ''Managers'' OR MemberOf = ''Users'' AND InUse = 1 ORDER BY ListOrder',   ErrorDescription = 'The connection cannot be used to perform this operation. It is either closed or invalid in this context.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'frmLogOn'   AND ProcedureName = 'FillUserNames'   AND ErrorLineNumber = '50'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:42:01 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'UserRole'      AND ProcedureName = 'GetUserRole'      AND ErrorLineNumber = '0'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('UserRole',            'GetUserRole',            '0',            'SELECT * FROM UserRole WHERE MemberOf = '''' AND SystemRole = ''MicroListMenu''',            'The connection cannot be used to perform this operation. It is either closed or invalid in this context.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT * FROM UserRole WHERE MemberOf = '''' AND SystemRole = ''MicroListMenu''',   ErrorDescription = 'The connection cannot be used to perform this operation. It is either closed or invalid in this context.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'UserRole'   AND ProcedureName = 'GetUserRole'   AND ErrorLineNumber = '0'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:42:01 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'frmMain'      AND ProcedureName = 'UpdateLoggedOnUser'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('frmMain',            'UpdateLoggedOnUser',            '40',            'IF EXISTS (SELECT * FROM LoggedOnUsers WHERE            MachineName = ''JUNAID''            AND AppName = ''NetAcquire'')   UPDATE LoggedOnUsers   SET UserName = ''''   WHERE  MachineName = ''JUNAID''   AND AppName = ''NetAcquire''ELSE   INSERT INTO LoggedOnUsers   (MachineName, UserName, AppName)   VALUES   (''JUNAID'',    '''',    ''NetAcquire'')',            'Operation is not allowed when the object is closed.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF EXISTS (SELECT * FROM LoggedOnUsers WHERE            MachineName = ''JUNAID''            AND AppName = ''NetAcquire'')   UPDATE LoggedOnUsers   SET UserName = ''''   WHERE  MachineName = ''JUNAID''   AND AppName = ''NetAcquire''ELSE   INSERT INTO LoggedOnUsers   (MachineName, UserName, AppName)   VALUES   (''JUNAID'',    '''',    ''NetAcquire'')',   ErrorDescription = 'Operation is not allowed when the object is closed.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'frmMain'   AND ProcedureName = 'UpdateLoggedOnUser'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagTestDefinitions')     AND name = 'PrintRefRange')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD PrintRefRange tinyint NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'UserName')   BEGIN     ALTER TABLE GenericResults     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE GenericResults     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'Valid')   BEGIN     ALTER TABLE GenericResults     ADD Valid tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'ValidatedBy')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'UserName')   BEGIN     ALTER TABLE ExternalDefinitions     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE ExternalDefinitions     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'Department')   BEGIN     ALTER TABLE ExternalDefinitions     ADD Department nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('eAddress')     AND name = 'ListOrder')   BEGIN     ALTER TABLE eAddress     ADD ListOrder int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('eAddress')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE eAddress     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('eAddress')     AND name = 'UserName')   BEGIN     ALTER TABLE eAddress     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Sensitivities')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE Sensitivities     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Reports')     AND name = 'Hidden')   BEGIN     ALTER TABLE Reports     ADD Hidden tinyint NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'PrintedDateTime')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'ValidatedBy')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'PrintedBy')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioTestDefinitions')     AND name = 'HealthLinkPanel')   BEGIN     ALTER TABLE BioTestDefinitions     ADD HealthLinkPanel nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRequests')     AND name = 'AddOn')   BEGIN     ALTER TABLE BioRequests     ADD AddOn bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PhoneLog')     AND name = 'Direction')   BEGIN     ALTER TABLE PhoneLog     ADD Direction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Antibiotics')     AND name = 'ViewInGrid')   BEGIN     ALTER TABLE Antibiotics     ADD ViewInGrid bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPs')     AND name = 'PrintReport')   BEGIN     ALTER TABLE GPs     ADD PrintReport bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPs')     AND name = 'Interim')   BEGIN     ALTER TABLE GPs     ADD Interim bit NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Counter')   BEGIN     ALTER TABLE MedibridgeResults     ADD Counter numeric(18, 0) IDENTITY(1,1) NOT NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Analyte')   BEGIN     ALTER TABLE MedibridgeResults     ADD Analyte nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Chart')   BEGIN     ALTER TABLE MedibridgeResults     ADD Chart nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'FileName')   BEGIN     ALTER TABLE MedibridgeResults     ADD FileName nvarchar(500) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Units')   BEGIN     ALTER TABLE MedibridgeResults     ADD Units nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Demographics')     AND name = 'MicroHealthLinkReleaseTime')   BEGIN     ALTER TABLE Demographics     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('DemographicsAudit')     AND name = 'MicroHealthLinkReleaseTime')   BEGIN     ALTER TABLE DemographicsAudit     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'BiomnisCode')   BEGIN     ALTER TABLE ExternalDefinitions     ADD BiomnisCode nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('AnalyserTestCodeMapping')     AND name = 'Department')   BEGIN     ALTER TABLE AnalyserTestCodeMapping     ADD Department nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BIOTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioTestDefinitionsArc')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE BioTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('EndTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE EndTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('EndTestDefinitionsArc')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE EndTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE ImmTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmTestDefinitionsArc')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE ImmTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM Lists WHERE     Code = 'B'     AND Text = 'Biomnis'     AND ListType = 'AC')   BEGIN     INSERT INTO Lists (Code, Text, ListType, InUse, ListOrder)     VALUES ('B', 'Biomnis', 'AC', '1', 999)   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE CoagResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE HaemRepeats50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRequestsAudit')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioRequestsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:50 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BIOTestDefinitions')     AND name = 'HealthLink')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD HealthLink Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BIOTestDefinitions')     AND name = 'Accredited')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD Accredited Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE HaemResults50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('demographics')     AND name = 'LabNo')   BEGIN     ALTER TABLE demographics     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('demographicsAudit')     AND name = 'LabNo')   BEGIN     ALTER TABLE demographicsAudit     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'MedRenal')   BEGIN     ALTER TABLE BioRepeats     ADD MedRenal tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE BioRepeats     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE BioResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioRepeats     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRequests')     AND name = 'GBottle')   BEGIN     ALTER TABLE BioRequests     ADD GBottle Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemResults50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('TempHaem')     AND name = 'SignOff')   BEGIN     ALTER TABLE TempHaem     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('TempHaem')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE TempHaem     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('TempHaem')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE TempHaem     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE BioResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE BioResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE BioResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE BioRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'SignOff')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE CoagResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE CoagResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE CoagResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE ImmResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE ImmResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE ImmResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLog')     AND name = 'SignOff')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLog')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLog')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLogArc')     AND name = 'SignOff')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLogArc')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLogArc')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesRequests50')     AND name = 'Analyser')   BEGIN     ALTER TABLE FaecesRequests50     ADD Analyser nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesRequests50')     AND name = 'Programmed')   BEGIN     ALTER TABLE FaecesRequests50     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ViewedReports')     AND name = 'Usercode')   BEGIN     ALTER TABLE ViewedReports     ADD Usercode nvarchar(5)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemTestDefinitions')     AND name = 'KnownToAnalyser')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD KnownToAnalyser bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintPending')     AND name = 'PrintAction')   BEGIN     ALTER TABLE PrintPending     ADD PrintAction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPOrders')     AND name = 'Programmed')   BEGIN     ALTER TABLE GPOrders     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPOrders')     AND name = 'SampleDate')   BEGIN     ALTER TABLE GPOrders     ADD SampleDate datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PhoneAlert')     AND name = 'PhoneAlertDateTime')   BEGIN     ALTER TABLE PhoneAlert     ADD PhoneAlertDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Reports')     AND name = 'ReportType')   BEGIN     ALTER TABLE Reports     ADD ReportType nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'ScanViewLog'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'UserProfiles'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTResults'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatientLive'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatients'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatientTemp'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'LIHValues'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'IncludeAutoValUrine'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'UserRole'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GPOrders'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GPOrderPatient'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GpordersProfile'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'HaePanels'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'DemographicsUniLabNo'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT TOP 50 * FROM Masks WHERE LIH IS NULL
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/Select * from Options order by ListOrder
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/select * from interp
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[LockStatus]')                AND OBJECTPROPERTY(id, N'IsUserTable') = 1) SELECT SampleID, cast(v as int) & 1 as Demo , cast(v as int) & 2 as Microscopy, cast(v as int) & 4 as Ident, cast(v as int) & 8 as Faeces, cast(v as int) & 16 as CandS , cast(v as int) & 32 as FOB, cast(v as int) & 64 as RotaAdeno, cast(v as int) & 128  as RedSub, cast(v as int) & 256 as RSV , cast(v as int) & 512 as CSF, cast(v as int) & 1024 as CDiff, cast(v as int) & 2048 as OP, cast(v as int) & 4096 as Identification INTO LockStatus FROM PrintValid IF NOT EXISTS (SELECT name FROM sysindexes WHERE name = 'idx_LS_SampleID')   CREATE CLUSTERED INDEX [idx_LS_SampleID] ON [dbo].[LockStatus] ([SampleID])
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[PrintedStatus]')                AND OBJECTPROPERTY(id, N'IsUserTable') = 1) SELECT SampleID, cast(P as int) & 1 as Demo , cast(P as int) & 2 as Microscopy, cast(P as int) & 4 as Ident, cast(P as int) & 8 as Faeces, cast(P as int) & 16 as CandS , cast(P as int) & 32 as FOB, cast(P as int) & 64 as RotaAdeno, cast(P as int) & 128  as RedSub, cast(P as int) & 256 as RSV , cast(P as int) & 512 as CSF, cast(P as int) & 1024 as CDiff, cast(P as int) & 2048 as OP, cast(P as int) & 4096 as Identification INTO PrintedStatus FROM PrintValid IF NOT EXISTS (SELECT name FROM sysindexes WHERE name = 'idx_PS_SampleID')   CREATE CLUSTERED INDEX [idx_PS_SampleID] ON [dbo].[PrintedStatus] ([SampleID])
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'DemogValidation'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'BiomnisRequests'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'ConsultantListLog'
/*21/12/2023 2:42:51 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'MicroAutoCommentAlert'
/*21/12/2023 2:42:53 PM ;  ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'LogOnShowName'
/*21/12/2023 2:42:53 PM ;  ; 6.12.146 ;*/SELECT Name FROM Users WHERE MemberOf = 'Administrators' OR MemberOf = 'Managers' OR MemberOf = 'Users' AND InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:42:56 PM ;  ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'LogOnShowName'
/*21/12/2023 2:42:56 PM ;  ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'LogOnUpperLower'
/*21/12/2023 2:42:56 PM ;  ; 6.12.146 ;*/SELECT Code, MemberOf, LogOffDelay, Name, COALESCE(PassDate, getdate()-1) AS PassDate FROM Users WHERE inuse = 1 and Password = 'gort77' 
/*21/12/2023 2:42:56 PM ; K Gregg ; 6.12.146 ;*/Select * from ActivityLog
/*21/12/2023 2:42:56 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroListMenu'
/*21/12/2023 2:42:56 PM ; K Gregg ; 6.12.146 ;*/IF EXISTS (SELECT * FROM LoggedOnUsers WHERE            MachineName = 'JUNAID'            AND AppName = 'NetAcquire')   UPDATE LoggedOnUsers   SET UserName = 'K Gregg'   WHERE  MachineName = 'JUNAID'   AND AppName = 'NetAcquire'ELSE   INSERT INTO LoggedOnUsers   (MachineName, UserName, AppName)   VALUES   ('JUNAID',    'K Gregg',    'NetAcquire')
/*21/12/2023 2:42:59 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 2:42:59 PM ; K Gregg ; 6.12.146 ;*/SELECT DISTINCT Text, MIN(ListOrder) L FROM Wards WHERE HospitalCode = 'C' AND InUse = 1 GROUP BY Text ORDER BY L
/*21/12/2023 2:42:59 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 2:42:59 PM ; K Gregg ; 6.12.146 ;*/SELECT DISTINCT Text, MIN(ListOrder) L FROM Clinicians WHERE HospitalCode = 'C' AND InUse = 1 AND (Text IS NOT NULL AND Text <> '') GROUP BY Text ORDER BY L
/*21/12/2023 2:42:59 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 2:42:59 PM ; K Gregg ; 6.12.146 ;*/SELECT G.Text, G.Code, G.Addr0, G.Addr1, G.Title, G.ForeName, G.SurName, G.Phone, G.FAX, G.Practice, G.HospitalCode, COALESCE(G.ListOrder, 999) ListOrder, G.MCNumber, G.PracticeNumber, COALESCE(G.InUse, 1) InUse, COALESCE(G.Compiled, 1) Compiled, COALESCE(G.HealthLink, 1) Healthlink, COALESCE(G.PrintReport, 1) PrintReport, COALESCE(E.Include, 0) EGFR, AutoCC, COALESCE(G.Interim, 1) Interim FROM GPs G JOIN IncludeEGFR E ON G.Text = E.SourceName WHERE HospitalCode = 'C' AND E.SourceType = 'GP' AND InUse = '1' ORDER BY ListOrder
/*21/12/2023 2:42:59 PM ; K Gregg ; 6.12.146 ;*/SELECT Text, UPPER(ListType) ListType FROM Lists WHERE ListType IN ('IN', 'CA', 'CR', 'MI', 'SI', 'OV', 'CD', 'HO', 'MQ') AND InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:42:59 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'FX' and InUse = 1 order by ListOrder
/*21/12/2023 2:42:59 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'FS' and InUse = 1 order by ListOrder
/*21/12/2023 2:42:59 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'FP' and InUse = 1 order by ListOrder
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'FA' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'FG' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'OR' and InUse = 1 order by ListOrder
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select distinct AntibioticName, ListOrder from Antibiotics order by ListOrder
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'BA' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select top 10 * from MRU where UserCode = 'KJG' Order by DateTime desc
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroDemTab'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Site, SiteDetails, UserName, DateTimeOfRecord FROM SiteDetails50 WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 * FROM ScannedImages WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 10
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select IsNULL(R.Question,'') Question, IsNULL(R.Answer,'') Answer from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '10' AND (Discipline = 'MicroGeneral' OR Discipline = 'Demographic' OR Discipline = 'MicroCS' OR Discipline = 'MicroConsultant' )
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select PatName from Demographics where SampleID = 9 and PatName <> '' and PatName is not null and DoB is not null
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select * from PhoneLog where  Cast(SampleID as varchar (100)) = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select Distinct IsNULL(RequestID,'') RequestID from ocmRequestDetails Where SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '10' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '10' ORDER BY A.ListOrder
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/ SELECT     D.DoB, D.Ward, D.DateTimeDemographics, D.Age, ISNULL(SD.Site,'') AS Site, I.OrganismGroup, I.OrganismName, I.IsolateNumber
 FROM         demographics AS D INNER JOIN Isolates AS I ON D.SampleID = I.SampleID INNER JOIN SiteDetails50 AS SD ON D.SampleID = SD.SampleID
 WHERE     D.SampleID = '10'

/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT I.SampleID, COALESCE(I.IsolateNumber, 1) IsolateNumber, COALESCE(I.OrganismGroup, '') OrganismGroup, COALESCE(I.OrganismName, '') OrganismName, COALESCE(I.Qualifier, '') Qualifier, COALESCE(I.UserName, '') UserName, COALESCE(I.RecordDateTime, '1/1/1900') RecordDateTime, COALESCE(PV.Valid, 0) Valid, COALESCE(PV.Printed, 0) Printed FROM Isolates I LEFT JOIN PrintValidLog PV ON I.SampleID = PV.SampleID WHERE I.SampleID = '10' ORDER BY I.IsolateNumber
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '10' and Valid = 1
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50 F WHERE F.SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50Audit F WHERE F.SampleID = '10' ORDER BY F.DateTimeOfRecord desc
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/Select * from ConsultantList Order by SampleID
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM Isolates WHERE SampleID = '9'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(FOB, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RotaAdeno, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CDiff, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(OP, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CSF, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RSV, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RedSub, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesRepeats WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesArc WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesRepeats WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesArc WHERE SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Reports WHERE SampleID = '10' AND Dept = 'Microbiology'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE COALESCE(ForMicro, 0) <> 0 AND SampleID = '10'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 10
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'EnableMicroNotepad'
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 ReportType FROM REPORTS WHERE SampleID ='10' ORDER BY PRINTTIME DESC
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'BB' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'RR' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'WW' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:43:00 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'HealthLinkDeptMicro'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Site, SiteDetails, UserName, DateTimeOfRecord FROM SiteDetails50 WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 * FROM ScannedImages WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 10
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/Select IsNULL(R.Question,'') Question, IsNULL(R.Answer,'') Answer from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '10' AND (Discipline = 'MicroGeneral' OR Discipline = 'Demographic' OR Discipline = 'MicroCS' OR Discipline = 'MicroConsultant' )
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/Select PatName from Demographics where SampleID = 9 and PatName <> '' and PatName is not null and DoB is not null
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/Select * from PhoneLog where  Cast(SampleID as varchar (100)) = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/Select Distinct IsNULL(RequestID,'') RequestID from ocmRequestDetails Where SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '10' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '10' ORDER BY A.ListOrder
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/ SELECT     D.DoB, D.Ward, D.DateTimeDemographics, D.Age, ISNULL(SD.Site,'') AS Site, I.OrganismGroup, I.OrganismName, I.IsolateNumber
 FROM         demographics AS D INNER JOIN Isolates AS I ON D.SampleID = I.SampleID INNER JOIN SiteDetails50 AS SD ON D.SampleID = SD.SampleID
 WHERE     D.SampleID = '10'

/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT I.SampleID, COALESCE(I.IsolateNumber, 1) IsolateNumber, COALESCE(I.OrganismGroup, '') OrganismGroup, COALESCE(I.OrganismName, '') OrganismName, COALESCE(I.Qualifier, '') Qualifier, COALESCE(I.UserName, '') UserName, COALESCE(I.RecordDateTime, '1/1/1900') RecordDateTime, COALESCE(PV.Valid, 0) Valid, COALESCE(PV.Printed, 0) Printed FROM Isolates I LEFT JOIN PrintValidLog PV ON I.SampleID = PV.SampleID WHERE I.SampleID = '10' ORDER BY I.IsolateNumber
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '10' and Valid = 1
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50 F WHERE F.SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50Audit F WHERE F.SampleID = '10' ORDER BY F.DateTimeOfRecord desc
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/Select * from ConsultantList Order by SampleID
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM Isolates WHERE SampleID = '9'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(FOB, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RotaAdeno, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CDiff, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(OP, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CSF, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RSV, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RedSub, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesRepeats WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesArc WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesRepeats WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesArc WHERE SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Reports WHERE SampleID = '10' AND Dept = 'Microbiology'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE COALESCE(ForMicro, 0) <> 0 AND SampleID = '10'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 10
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'EnableMicroNotepad'
/*21/12/2023 2:43:09 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 ReportType FROM REPORTS WHERE SampleID ='10' ORDER BY PRINTTIME DESC
/*21/12/2023 2:43:21 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = 9
/*21/12/2023 2:43:21 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '9' AND (Discipline = 'Demographic' )
/*21/12/2023 2:43:21 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '9'
/*21/12/2023 2:43:21 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '9'
/*21/12/2023 2:43:21 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '10'
/*21/12/2023 2:43:37 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '10'
/*21/12/2023 2:43:40 PM ; K Gregg ; 6.12.146 ;*/Delete from UrineRequests50 where SampleID = '10'
/*21/12/2023 2:43:40 PM ; K Gregg ; 6.12.146 ;*/INSERT INTO UrineRequests50 (SampleID, Request, UserName) VALUES ('10',  'CS',  'K Gregg')
/*21/12/2023 2:43:40 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'HealthLinkDeptMicro'
/*21/12/2023 2:43:40 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '10'
/*21/12/2023 2:43:40 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:43:40 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '10'
/*21/12/2023 2:43:40 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '10'
/*21/12/2023 2:43:40 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '10'
/*21/12/2023 2:43:40 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:43:40 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '10'
/*21/12/2023 2:43:40 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '10'
/*21/12/2023 2:43:40 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '10'
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroDemSave'
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/select Top 1 ISNULL(LabNo,0) as LabNo  from DemographicsUniLabNo As D   WHERE ISNULL(LabNo,0)  <> 0 AND  D.PatName='IMRAN ARSHAD' AND DoB = '25/Dec/2000' ORDER BY DateTimeOfRecord DESC 
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/IF EXISTS (SELECT * FROM SiteDetails50 WHERE            SampleID = '10')   UPDATE SiteDetails50   SET Site = 'Urine',   SiteDetails = 'MSU',   UserName = 'K Gregg'   WHERE SampleID = '10' ELSE   INSERT INTO SiteDetails50 (SampleID, Site, SiteDetails, UserName)   VALUES   ('10',   'Urine',   'MSU',   'K Gregg')
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '10' ORDER BY A.ListOrder
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '10' and Valid = 1
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '10'
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '10'
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/update Demographics set DateTimeDemographics = '21/Dec/2023 14:43:46' where SampleID = '10' and DateTimeDemographics is null
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Select top 10 * from MRU where UserCode = 'KJG' Order by DateTime desc
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Delete from MRU where UserCode = 'KJG'
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('9', '20/Dec/2023 15:51:39', 'KJG')
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('8', '20/Dec/2023 15:37:26', 'KJG')
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000030', '28/Nov/2023 16:14:08', 'KJG')
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000029', '27/Nov/2023 21:44:15', 'KJG')
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000028', '23/Nov/2023 20:36:17', 'KJG')
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('3777528', '23/Nov/2023 14:51:57', 'KJG')
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('3777529', '23/Nov/2023 14:51:40', 'KJG')
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000019', '23/Nov/2023 14:48:16', 'KJG')
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000017', '22/Nov/2023 22:29:15', 'KJG')
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('10', '21/Dec/2023 14:43:46', 'KJG')
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Select top 10 * from MRU where UserCode = 'KJG' Order by DateTime desc
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Select RID from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '10'
/*21/12/2023 2:43:46 PM ; K Gregg ; 6.12.146 ;*/Select RID from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '10'
/*21/12/2023 2:43:55 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroLists'
/*21/12/2023 2:43:55 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:43:55 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:43:55 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '10'
/*21/12/2023 2:43:55 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '10' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '10'
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Site, SiteDetails, UserName, DateTimeOfRecord FROM SiteDetails50 WHERE SampleID = '10'
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '10'
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '10'
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '10'
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 * FROM ScannedImages WHERE SampleID = '10'
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 10
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/Select IsNULL(R.Question,'') Question, IsNULL(R.Answer,'') Answer from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '10'
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '10' AND (Discipline = 'MicroGeneral' OR Discipline = 'Demographic' OR Discipline = 'MicroCS' OR Discipline = 'MicroConsultant' )
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/Select * from PhoneLog where  Cast(SampleID as varchar (100)) = '10'
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '10'
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/Select Distinct IsNULL(RequestID,'') RequestID from ocmRequestDetails Where SampleID = '10'
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '10' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:44:40 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '10' ORDER BY A.ListOrder
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/ SELECT     D.DoB, D.Ward, D.DateTimeDemographics, D.Age, ISNULL(SD.Site,'') AS Site, I.OrganismGroup, I.OrganismName, I.IsolateNumber
 FROM         demographics AS D INNER JOIN Isolates AS I ON D.SampleID = I.SampleID INNER JOIN SiteDetails50 AS SD ON D.SampleID = SD.SampleID
 WHERE     D.SampleID = '10'

/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT I.SampleID, COALESCE(I.IsolateNumber, 1) IsolateNumber, COALESCE(I.OrganismGroup, '') OrganismGroup, COALESCE(I.OrganismName, '') OrganismName, COALESCE(I.Qualifier, '') Qualifier, COALESCE(I.UserName, '') UserName, COALESCE(I.RecordDateTime, '1/1/1900') RecordDateTime, COALESCE(PV.Valid, 0) Valid, COALESCE(PV.Printed, 0) Printed FROM Isolates I LEFT JOIN PrintValidLog PV ON I.SampleID = PV.SampleID WHERE I.SampleID = '10' ORDER BY I.IsolateNumber
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '10' and Valid = 1
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50 F WHERE F.SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50Audit F WHERE F.SampleID = '10' ORDER BY F.DateTimeOfRecord desc
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/Select * from ConsultantList Order by SampleID
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM Isolates WHERE SampleID = '9'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(FOB, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RotaAdeno, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CDiff, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(OP, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CSF, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RSV, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RedSub, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesRepeats WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesArc WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesRepeats WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesArc WHERE SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Reports WHERE SampleID = '10' AND Dept = 'Microbiology'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE COALESCE(ForMicro, 0) <> 0 AND SampleID = '10'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 10
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'EnableMicroNotepad'
/*21/12/2023 2:44:41 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 ReportType FROM REPORTS WHERE SampleID ='10' ORDER BY PRINTTIME DESC
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagTestDefinitions')     AND name = 'PrintRefRange')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD PrintRefRange tinyint NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'UserName')   BEGIN     ALTER TABLE GenericResults     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE GenericResults     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'Valid')   BEGIN     ALTER TABLE GenericResults     ADD Valid tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'ValidatedBy')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'UserName')   BEGIN     ALTER TABLE ExternalDefinitions     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE ExternalDefinitions     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'Department')   BEGIN     ALTER TABLE ExternalDefinitions     ADD Department nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('eAddress')     AND name = 'ListOrder')   BEGIN     ALTER TABLE eAddress     ADD ListOrder int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('eAddress')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE eAddress     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('eAddress')     AND name = 'UserName')   BEGIN     ALTER TABLE eAddress     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Sensitivities')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE Sensitivities     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Reports')     AND name = 'Hidden')   BEGIN     ALTER TABLE Reports     ADD Hidden tinyint NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'PrintedDateTime')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'ValidatedBy')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'PrintedBy')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioTestDefinitions')     AND name = 'HealthLinkPanel')   BEGIN     ALTER TABLE BioTestDefinitions     ADD HealthLinkPanel nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRequests')     AND name = 'AddOn')   BEGIN     ALTER TABLE BioRequests     ADD AddOn bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PhoneLog')     AND name = 'Direction')   BEGIN     ALTER TABLE PhoneLog     ADD Direction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Antibiotics')     AND name = 'ViewInGrid')   BEGIN     ALTER TABLE Antibiotics     ADD ViewInGrid bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPs')     AND name = 'PrintReport')   BEGIN     ALTER TABLE GPs     ADD PrintReport bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPs')     AND name = 'Interim')   BEGIN     ALTER TABLE GPs     ADD Interim bit NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Counter')   BEGIN     ALTER TABLE MedibridgeResults     ADD Counter numeric(18, 0) IDENTITY(1,1) NOT NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Analyte')   BEGIN     ALTER TABLE MedibridgeResults     ADD Analyte nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Chart')   BEGIN     ALTER TABLE MedibridgeResults     ADD Chart nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'FileName')   BEGIN     ALTER TABLE MedibridgeResults     ADD FileName nvarchar(500) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Units')   BEGIN     ALTER TABLE MedibridgeResults     ADD Units nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Demographics')     AND name = 'MicroHealthLinkReleaseTime')   BEGIN     ALTER TABLE Demographics     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('DemographicsAudit')     AND name = 'MicroHealthLinkReleaseTime')   BEGIN     ALTER TABLE DemographicsAudit     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'BiomnisCode')   BEGIN     ALTER TABLE ExternalDefinitions     ADD BiomnisCode nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('AnalyserTestCodeMapping')     AND name = 'Department')   BEGIN     ALTER TABLE AnalyserTestCodeMapping     ADD Department nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BIOTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioTestDefinitionsArc')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE BioTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('EndTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE EndTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('EndTestDefinitionsArc')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE EndTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE ImmTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmTestDefinitionsArc')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE ImmTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM Lists WHERE     Code = 'B'     AND Text = 'Biomnis'     AND ListType = 'AC')   BEGIN     INSERT INTO Lists (Code, Text, ListType, InUse, ListOrder)     VALUES ('B', 'Biomnis', 'AC', '1', 999)   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE CoagResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE HaemRepeats50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRequestsAudit')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioRequestsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BIOTestDefinitions')     AND name = 'HealthLink')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD HealthLink Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BIOTestDefinitions')     AND name = 'Accredited')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD Accredited Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE HaemResults50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('demographics')     AND name = 'LabNo')   BEGIN     ALTER TABLE demographics     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('demographicsAudit')     AND name = 'LabNo')   BEGIN     ALTER TABLE demographicsAudit     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'MedRenal')   BEGIN     ALTER TABLE BioRepeats     ADD MedRenal tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE BioRepeats     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE BioResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioRepeats     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRequests')     AND name = 'GBottle')   BEGIN     ALTER TABLE BioRequests     ADD GBottle Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemResults50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('TempHaem')     AND name = 'SignOff')   BEGIN     ALTER TABLE TempHaem     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('TempHaem')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE TempHaem     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('TempHaem')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE TempHaem     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE BioResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE BioResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE BioResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE BioRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'SignOff')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE CoagResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE CoagResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE CoagResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE ImmResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE ImmResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE ImmResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLog')     AND name = 'SignOff')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLog')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLog')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLogArc')     AND name = 'SignOff')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLogArc')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLogArc')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:42 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesRequests50')     AND name = 'Analyser')   BEGIN     ALTER TABLE FaecesRequests50     ADD Analyser nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesRequests50')     AND name = 'Programmed')   BEGIN     ALTER TABLE FaecesRequests50     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ViewedReports')     AND name = 'Usercode')   BEGIN     ALTER TABLE ViewedReports     ADD Usercode nvarchar(5)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemTestDefinitions')     AND name = 'KnownToAnalyser')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD KnownToAnalyser bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintPending')     AND name = 'PrintAction')   BEGIN     ALTER TABLE PrintPending     ADD PrintAction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPOrders')     AND name = 'Programmed')   BEGIN     ALTER TABLE GPOrders     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPOrders')     AND name = 'SampleDate')   BEGIN     ALTER TABLE GPOrders     ADD SampleDate datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PhoneAlert')     AND name = 'PhoneAlertDateTime')   BEGIN     ALTER TABLE PhoneAlert     ADD PhoneAlertDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Reports')     AND name = 'ReportType')   BEGIN     ALTER TABLE Reports     ADD ReportType nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'ScanViewLog'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'UserProfiles'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTResults'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatientLive'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatients'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatientTemp'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'LIHValues'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'IncludeAutoValUrine'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'UserRole'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GPOrders'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GPOrderPatient'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GpordersProfile'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'HaePanels'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'DemographicsUniLabNo'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT TOP 50 * FROM Masks WHERE LIH IS NULL
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/Select * from Options order by ListOrder
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/select * from interp
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[LockStatus]')                AND OBJECTPROPERTY(id, N'IsUserTable') = 1) SELECT SampleID, cast(v as int) & 1 as Demo , cast(v as int) & 2 as Microscopy, cast(v as int) & 4 as Ident, cast(v as int) & 8 as Faeces, cast(v as int) & 16 as CandS , cast(v as int) & 32 as FOB, cast(v as int) & 64 as RotaAdeno, cast(v as int) & 128  as RedSub, cast(v as int) & 256 as RSV , cast(v as int) & 512 as CSF, cast(v as int) & 1024 as CDiff, cast(v as int) & 2048 as OP, cast(v as int) & 4096 as Identification INTO LockStatus FROM PrintValid IF NOT EXISTS (SELECT name FROM sysindexes WHERE name = 'idx_LS_SampleID')   CREATE CLUSTERED INDEX [idx_LS_SampleID] ON [dbo].[LockStatus] ([SampleID])
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[PrintedStatus]')                AND OBJECTPROPERTY(id, N'IsUserTable') = 1) SELECT SampleID, cast(P as int) & 1 as Demo , cast(P as int) & 2 as Microscopy, cast(P as int) & 4 as Ident, cast(P as int) & 8 as Faeces, cast(P as int) & 16 as CandS , cast(P as int) & 32 as FOB, cast(P as int) & 64 as RotaAdeno, cast(P as int) & 128  as RedSub, cast(P as int) & 256 as RSV , cast(P as int) & 512 as CSF, cast(P as int) & 1024 as CDiff, cast(P as int) & 2048 as OP, cast(P as int) & 4096 as Identification INTO PrintedStatus FROM PrintValid IF NOT EXISTS (SELECT name FROM sysindexes WHERE name = 'idx_PS_SampleID')   CREATE CLUSTERED INDEX [idx_PS_SampleID] ON [dbo].[PrintedStatus] ([SampleID])
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'DemogValidation'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'BiomnisRequests'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'ConsultantListLog'
/*21/12/2023 2:49:43 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'MicroAutoCommentAlert'
/*21/12/2023 2:49:45 PM ;  ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'LogOnShowName'
/*21/12/2023 2:49:45 PM ;  ; 6.12.146 ;*/SELECT Name FROM Users WHERE MemberOf = 'Administrators' OR MemberOf = 'Managers' OR MemberOf = 'Users' AND InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:49:49 PM ;  ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'LogOnShowName'
/*21/12/2023 2:49:49 PM ;  ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'LogOnUpperLower'
/*21/12/2023 2:49:49 PM ;  ; 6.12.146 ;*/SELECT Code, MemberOf, LogOffDelay, Name, COALESCE(PassDate, getdate()-1) AS PassDate FROM Users WHERE inuse = 1 and Password = 'gort77' 
/*21/12/2023 2:49:49 PM ; K Gregg ; 6.12.146 ;*/Select * from ActivityLog
/*21/12/2023 2:49:49 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroListMenu'
/*21/12/2023 2:49:49 PM ; K Gregg ; 6.12.146 ;*/IF EXISTS (SELECT * FROM LoggedOnUsers WHERE            MachineName = 'JUNAID'            AND AppName = 'NetAcquire')   UPDATE LoggedOnUsers   SET UserName = 'K Gregg'   WHERE  MachineName = 'JUNAID'   AND AppName = 'NetAcquire'ELSE   INSERT INTO LoggedOnUsers   (MachineName, UserName, AppName)   VALUES   ('JUNAID',    'K Gregg',    'NetAcquire')
/*21/12/2023 2:49:50 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT DISTINCT Text, MIN(ListOrder) L FROM Wards WHERE HospitalCode = 'C' AND InUse = 1 GROUP BY Text ORDER BY L
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT DISTINCT Text, MIN(ListOrder) L FROM Clinicians WHERE HospitalCode = 'C' AND InUse = 1 AND (Text IS NOT NULL AND Text <> '') GROUP BY Text ORDER BY L
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT G.Text, G.Code, G.Addr0, G.Addr1, G.Title, G.ForeName, G.SurName, G.Phone, G.FAX, G.Practice, G.HospitalCode, COALESCE(G.ListOrder, 999) ListOrder, G.MCNumber, G.PracticeNumber, COALESCE(G.InUse, 1) InUse, COALESCE(G.Compiled, 1) Compiled, COALESCE(G.HealthLink, 1) Healthlink, COALESCE(G.PrintReport, 1) PrintReport, COALESCE(E.Include, 0) EGFR, AutoCC, COALESCE(G.Interim, 1) Interim FROM GPs G JOIN IncludeEGFR E ON G.Text = E.SourceName WHERE HospitalCode = 'C' AND E.SourceType = 'GP' AND InUse = '1' ORDER BY ListOrder
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT Text, UPPER(ListType) ListType FROM Lists WHERE ListType IN ('IN', 'CA', 'CR', 'MI', 'SI', 'OV', 'CD', 'HO', 'MQ') AND InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'FX' and InUse = 1 order by ListOrder
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'FS' and InUse = 1 order by ListOrder
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'FP' and InUse = 1 order by ListOrder
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'FA' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'FG' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'OR' and InUse = 1 order by ListOrder
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/Select distinct AntibioticName, ListOrder from Antibiotics order by ListOrder
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'BA' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/Select top 10 * from MRU where UserCode = 'KJG' Order by DateTime desc
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroDemTab'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Site, SiteDetails, UserName, DateTimeOfRecord FROM SiteDetails50 WHERE SampleID = '10'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '10'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '10'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '10'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 * FROM ScannedImages WHERE SampleID = '10'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 10
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/Select IsNULL(R.Question,'') Question, IsNULL(R.Answer,'') Answer from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '10'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '10' AND (Discipline = 'MicroGeneral' OR Discipline = 'Demographic' OR Discipline = 'MicroCS' OR Discipline = 'MicroConsultant' )
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/Select * from PhoneLog where  Cast(SampleID as varchar (100)) = '10'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '10'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/Select Distinct IsNULL(RequestID,'') RequestID from ocmRequestDetails Where SampleID = '10'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '10' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:49:51 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '10' ORDER BY A.ListOrder
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/ SELECT     D.DoB, D.Ward, D.DateTimeDemographics, D.Age, ISNULL(SD.Site,'') AS Site, I.OrganismGroup, I.OrganismName, I.IsolateNumber
 FROM         demographics AS D INNER JOIN Isolates AS I ON D.SampleID = I.SampleID INNER JOIN SiteDetails50 AS SD ON D.SampleID = SD.SampleID
 WHERE     D.SampleID = '10'

/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT I.SampleID, COALESCE(I.IsolateNumber, 1) IsolateNumber, COALESCE(I.OrganismGroup, '') OrganismGroup, COALESCE(I.OrganismName, '') OrganismName, COALESCE(I.Qualifier, '') Qualifier, COALESCE(I.UserName, '') UserName, COALESCE(I.RecordDateTime, '1/1/1900') RecordDateTime, COALESCE(PV.Valid, 0) Valid, COALESCE(PV.Printed, 0) Printed FROM Isolates I LEFT JOIN PrintValidLog PV ON I.SampleID = PV.SampleID WHERE I.SampleID = '10' ORDER BY I.IsolateNumber
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '10' and Valid = 1
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50 F WHERE F.SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50Audit F WHERE F.SampleID = '10' ORDER BY F.DateTimeOfRecord desc
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/Select * from ConsultantList Order by SampleID
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM Isolates WHERE SampleID = '9'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(FOB, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RotaAdeno, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CDiff, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(OP, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CSF, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RSV, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RedSub, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesRepeats WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesArc WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesRepeats WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesArc WHERE SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Reports WHERE SampleID = '10' AND Dept = 'Microbiology'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE COALESCE(ForMicro, 0) <> 0 AND SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 10
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'EnableMicroNotepad'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 ReportType FROM REPORTS WHERE SampleID ='10' ORDER BY PRINTTIME DESC
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'BB' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'RR' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'WW' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '10' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:49:52 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'HealthLinkDeptMicro'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Site, SiteDetails, UserName, DateTimeOfRecord FROM SiteDetails50 WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 * FROM ScannedImages WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 10
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/Select IsNULL(R.Question,'') Question, IsNULL(R.Answer,'') Answer from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '10' AND (Discipline = 'MicroGeneral' OR Discipline = 'Demographic' OR Discipline = 'MicroCS' OR Discipline = 'MicroConsultant' )
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/Select * from PhoneLog where  Cast(SampleID as varchar (100)) = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/Select Distinct IsNULL(RequestID,'') RequestID from ocmRequestDetails Where SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '10' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '10' ORDER BY A.ListOrder
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/ SELECT     D.DoB, D.Ward, D.DateTimeDemographics, D.Age, ISNULL(SD.Site,'') AS Site, I.OrganismGroup, I.OrganismName, I.IsolateNumber
 FROM         demographics AS D INNER JOIN Isolates AS I ON D.SampleID = I.SampleID INNER JOIN SiteDetails50 AS SD ON D.SampleID = SD.SampleID
 WHERE     D.SampleID = '10'

/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT I.SampleID, COALESCE(I.IsolateNumber, 1) IsolateNumber, COALESCE(I.OrganismGroup, '') OrganismGroup, COALESCE(I.OrganismName, '') OrganismName, COALESCE(I.Qualifier, '') Qualifier, COALESCE(I.UserName, '') UserName, COALESCE(I.RecordDateTime, '1/1/1900') RecordDateTime, COALESCE(PV.Valid, 0) Valid, COALESCE(PV.Printed, 0) Printed FROM Isolates I LEFT JOIN PrintValidLog PV ON I.SampleID = PV.SampleID WHERE I.SampleID = '10' ORDER BY I.IsolateNumber
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '10' and Valid = 1
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50 F WHERE F.SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50Audit F WHERE F.SampleID = '10' ORDER BY F.DateTimeOfRecord desc
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/Select * from ConsultantList Order by SampleID
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM Isolates WHERE SampleID = '9'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(FOB, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RotaAdeno, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CDiff, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(OP, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CSF, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RSV, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RedSub, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM PrintedStatus WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesRepeats WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesArc WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesRepeats WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesArc WHERE SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Reports WHERE SampleID = '10' AND Dept = 'Microbiology'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE COALESCE(ForMicro, 0) <> 0 AND SampleID = '10'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 10
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'EnableMicroNotepad'
/*21/12/2023 2:49:59 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 ReportType FROM REPORTS WHERE SampleID ='10' ORDER BY PRINTTIME DESC
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroDemSave'
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/select Top 1 ISNULL(LabNo,0) as LabNo  from DemographicsUniLabNo As D   WHERE ISNULL(LabNo,0)  <> 0 AND  D.PatName='IMRAN ARSHAD' AND DoB = '25/Dec/2000' ORDER BY DateTimeOfRecord DESC 
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/IF EXISTS (SELECT * FROM SiteDetails50 WHERE            SampleID = '10')   UPDATE SiteDetails50   SET Site = 'Urine',   SiteDetails = 'MSU',   UserName = 'K Gregg'   WHERE SampleID = '10' ELSE   INSERT INTO SiteDetails50 (SampleID, Site, SiteDetails, UserName)   VALUES   ('10',   'Urine',   'MSU',   'K Gregg')
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '10' ORDER BY A.ListOrder
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '10' and Valid = 1
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '10'
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '10'
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'frmEditMicrobiology'      AND ProcedureName = 'SaveDemographics'      AND ErrorLineNumber = '1060'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('frmEditMicrobiology',            'SaveDemographics',            '1060',            'Select * from Demographics where SampleID = ''10''',            'Control array element ''0'' doesn''t exist',            'K Gregg',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'Select * from Demographics where SampleID = ''10''',   ErrorDescription = 'Control array element ''0'' doesn''t exist',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = 'K Gregg',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'frmEditMicrobiology'   AND ProcedureName = 'SaveDemographics'   AND ErrorLineNumber = '1060'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/Select top 10 * from MRU where UserCode = 'KJG' Order by DateTime desc
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/Update MRU Set DateTime = '21/Dec/2023 14:50:02' where SampleID = '10' and UserCode = 'KJG'
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/Select top 10 * from MRU where UserCode = 'KJG' Order by DateTime desc
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/Select RID from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '10'
/*21/12/2023 2:50:02 PM ; K Gregg ; 6.12.146 ;*/Select RID from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '10'
/*21/12/2023 2:50:05 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroLists'
/*21/12/2023 2:50:05 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:50:05 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:50:05 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '10'
/*21/12/2023 2:50:05 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '10' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:50:07 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:50:07 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '10'
/*21/12/2023 2:50:07 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '10' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Site, SiteDetails, UserName, DateTimeOfRecord FROM SiteDetails50 WHERE SampleID = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 * FROM ScannedImages WHERE SampleID = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 11
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/Select IsNULL(R.Question,'') Question, IsNULL(R.Answer,'') Answer from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '11' AND (Discipline = 'MicroGeneral' OR Discipline = 'Demographic' OR Discipline = 'MicroCS' OR Discipline = 'MicroConsultant' )
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/Select PatName from Demographics where SampleID = 10 and PatName <> '' and PatName is not null and DoB is not null
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/Select * from PhoneLog where  Cast(SampleID as varchar (100)) = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/Select Distinct IsNULL(RequestID,'') RequestID from ocmRequestDetails Where SampleID = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '11' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '11' ORDER BY A.ListOrder
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/ SELECT     D.DoB, D.Ward, D.DateTimeDemographics, D.Age, ISNULL(SD.Site,'') AS Site, I.OrganismGroup, I.OrganismName, I.IsolateNumber
 FROM         demographics AS D INNER JOIN Isolates AS I ON D.SampleID = I.SampleID INNER JOIN SiteDetails50 AS SD ON D.SampleID = SD.SampleID
 WHERE     D.SampleID = '11'

/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '11'
/*21/12/2023 2:50:37 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT I.SampleID, COALESCE(I.IsolateNumber, 1) IsolateNumber, COALESCE(I.OrganismGroup, '') OrganismGroup, COALESCE(I.OrganismName, '') OrganismName, COALESCE(I.Qualifier, '') Qualifier, COALESCE(I.UserName, '') UserName, COALESCE(I.RecordDateTime, '1/1/1900') RecordDateTime, COALESCE(PV.Valid, 0) Valid, COALESCE(PV.Printed, 0) Printed FROM Isolates I LEFT JOIN PrintValidLog PV ON I.SampleID = PV.SampleID WHERE I.SampleID = '11' ORDER BY I.IsolateNumber
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '11' and Valid = 1
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50 F WHERE F.SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50Audit F WHERE F.SampleID = '11' ORDER BY F.DateTimeOfRecord desc
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/Select * from ConsultantList Order by SampleID
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM Isolates WHERE SampleID = '10'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(FOB, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RotaAdeno, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CDiff, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(OP, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CSF, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RSV, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RedSub, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesRepeats WHERE SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesArc WHERE SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesRepeats WHERE SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesArc WHERE SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Reports WHERE SampleID = '11' AND Dept = 'Microbiology'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE COALESCE(ForMicro, 0) <> 0 AND SampleID = '11'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 11
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'EnableMicroNotepad'
/*21/12/2023 2:50:38 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 ReportType FROM REPORTS WHERE SampleID ='11' ORDER BY PRINTTIME DESC
/*21/12/2023 2:50:43 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = 10
/*21/12/2023 2:50:43 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '10' AND (Discipline = 'Demographic' )
/*21/12/2023 2:50:43 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '10'
/*21/12/2023 2:50:43 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '10'
/*21/12/2023 2:50:43 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '11'
/*21/12/2023 2:50:46 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '11'
/*21/12/2023 2:50:48 PM ; K Gregg ; 6.12.146 ;*/Delete from UrineRequests50 where SampleID = '11'
/*21/12/2023 2:50:48 PM ; K Gregg ; 6.12.146 ;*/INSERT INTO UrineRequests50 (SampleID, Request, UserName) VALUES ('11',  'CS',  'K Gregg')
/*21/12/2023 2:50:48 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'HealthLinkDeptMicro'
/*21/12/2023 2:50:48 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '11'
/*21/12/2023 2:50:48 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:50:48 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '11'
/*21/12/2023 2:50:48 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '11'
/*21/12/2023 2:50:48 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '11'
/*21/12/2023 2:50:48 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:50:48 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '11'
/*21/12/2023 2:50:48 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '11'
/*21/12/2023 2:50:48 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '11'
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroDemSave'
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/select Top 1 ISNULL(LabNo,0) as LabNo  from DemographicsUniLabNo As D   WHERE ISNULL(LabNo,0)  <> 0 AND  D.PatName='IMRAN ARSHAD' AND DoB = '25/Dec/2000' ORDER BY DateTimeOfRecord DESC 
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/IF EXISTS (SELECT * FROM SiteDetails50 WHERE            SampleID = '11')   UPDATE SiteDetails50   SET Site = 'Urine',   SiteDetails = 'MSU',   UserName = 'K Gregg'   WHERE SampleID = '11' ELSE   INSERT INTO SiteDetails50 (SampleID, Site, SiteDetails, UserName)   VALUES   ('11',   'Urine',   'MSU',   'K Gregg')
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '11' ORDER BY A.ListOrder
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '11' and Valid = 1
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '11'
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '11'
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'frmEditMicrobiology'      AND ProcedureName = 'SaveDemographics'      AND ErrorLineNumber = '1060'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('frmEditMicrobiology',            'SaveDemographics',            '1060',            'Select * from Demographics where SampleID = ''11''',            'Control array element ''0'' doesn''t exist',            'K Gregg',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'Select * from Demographics where SampleID = ''11''',   ErrorDescription = 'Control array element ''0'' doesn''t exist',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = 'K Gregg',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'frmEditMicrobiology'   AND ProcedureName = 'SaveDemographics'   AND ErrorLineNumber = '1060'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Select top 10 * from MRU where UserCode = 'KJG' Order by DateTime desc
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Delete from MRU where UserCode = 'KJG'
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('10', '21/Dec/2023 14:50:02', 'KJG')
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('9', '20/Dec/2023 15:51:39', 'KJG')
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('8', '20/Dec/2023 15:37:26', 'KJG')
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000030', '28/Nov/2023 16:14:08', 'KJG')
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000029', '27/Nov/2023 21:44:15', 'KJG')
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000028', '23/Nov/2023 20:36:17', 'KJG')
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('3777528', '23/Nov/2023 14:51:57', 'KJG')
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('3777529', '23/Nov/2023 14:51:40', 'KJG')
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000019', '23/Nov/2023 14:48:16', 'KJG')
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('11', '21/Dec/2023 14:51:09', 'KJG')
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Select top 10 * from MRU where UserCode = 'KJG' Order by DateTime desc
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Select RID from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '11'
/*21/12/2023 2:51:09 PM ; K Gregg ; 6.12.146 ;*/Select RID from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '11'
/*21/12/2023 2:51:11 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroLists'
/*21/12/2023 2:51:11 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:51:11 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:51:11 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '11'
/*21/12/2023 2:51:11 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '11' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:51:29 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:51:29 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:51:29 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '11' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagTestDefinitions')     AND name = 'PrintRefRange')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD PrintRefRange tinyint NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'UserName')   BEGIN     ALTER TABLE GenericResults     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE GenericResults     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'Valid')   BEGIN     ALTER TABLE GenericResults     ADD Valid tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'ValidatedBy')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'UserName')   BEGIN     ALTER TABLE ExternalDefinitions     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE ExternalDefinitions     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'Department')   BEGIN     ALTER TABLE ExternalDefinitions     ADD Department nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('eAddress')     AND name = 'ListOrder')   BEGIN     ALTER TABLE eAddress     ADD ListOrder int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('eAddress')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE eAddress     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('eAddress')     AND name = 'UserName')   BEGIN     ALTER TABLE eAddress     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Sensitivities')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE Sensitivities     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Reports')     AND name = 'Hidden')   BEGIN     ALTER TABLE Reports     ADD Hidden tinyint NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'PrintedDateTime')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'ValidatedBy')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'PrintedBy')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioTestDefinitions')     AND name = 'HealthLinkPanel')   BEGIN     ALTER TABLE BioTestDefinitions     ADD HealthLinkPanel nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRequests')     AND name = 'AddOn')   BEGIN     ALTER TABLE BioRequests     ADD AddOn bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PhoneLog')     AND name = 'Direction')   BEGIN     ALTER TABLE PhoneLog     ADD Direction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Antibiotics')     AND name = 'ViewInGrid')   BEGIN     ALTER TABLE Antibiotics     ADD ViewInGrid bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPs')     AND name = 'PrintReport')   BEGIN     ALTER TABLE GPs     ADD PrintReport bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPs')     AND name = 'Interim')   BEGIN     ALTER TABLE GPs     ADD Interim bit NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Counter')   BEGIN     ALTER TABLE MedibridgeResults     ADD Counter numeric(18, 0) IDENTITY(1,1) NOT NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Analyte')   BEGIN     ALTER TABLE MedibridgeResults     ADD Analyte nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Chart')   BEGIN     ALTER TABLE MedibridgeResults     ADD Chart nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'FileName')   BEGIN     ALTER TABLE MedibridgeResults     ADD FileName nvarchar(500) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Units')   BEGIN     ALTER TABLE MedibridgeResults     ADD Units nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Demographics')     AND name = 'MicroHealthLinkReleaseTime')   BEGIN     ALTER TABLE Demographics     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('DemographicsAudit')     AND name = 'MicroHealthLinkReleaseTime')   BEGIN     ALTER TABLE DemographicsAudit     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'BiomnisCode')   BEGIN     ALTER TABLE ExternalDefinitions     ADD BiomnisCode nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('AnalyserTestCodeMapping')     AND name = 'Department')   BEGIN     ALTER TABLE AnalyserTestCodeMapping     ADD Department nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:53 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BIOTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioTestDefinitionsArc')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE BioTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('EndTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE EndTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('EndTestDefinitionsArc')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE EndTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE ImmTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmTestDefinitionsArc')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE ImmTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM Lists WHERE     Code = 'B'     AND Text = 'Biomnis'     AND ListType = 'AC')   BEGIN     INSERT INTO Lists (Code, Text, ListType, InUse, ListOrder)     VALUES ('B', 'Biomnis', 'AC', '1', 999)   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE CoagResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE HaemRepeats50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRequestsAudit')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioRequestsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BIOTestDefinitions')     AND name = 'HealthLink')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD HealthLink Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BIOTestDefinitions')     AND name = 'Accredited')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD Accredited Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE HaemResults50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('demographics')     AND name = 'LabNo')   BEGIN     ALTER TABLE demographics     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('demographicsAudit')     AND name = 'LabNo')   BEGIN     ALTER TABLE demographicsAudit     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'MedRenal')   BEGIN     ALTER TABLE BioRepeats     ADD MedRenal tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE BioRepeats     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE BioResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioRepeats     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRequests')     AND name = 'GBottle')   BEGIN     ALTER TABLE BioRequests     ADD GBottle Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemResults50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('TempHaem')     AND name = 'SignOff')   BEGIN     ALTER TABLE TempHaem     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('TempHaem')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE TempHaem     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('TempHaem')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE TempHaem     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE BioResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE BioResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE BioResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE BioRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'SignOff')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE CoagResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE CoagResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE CoagResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE ImmResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE ImmResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE ImmResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLog')     AND name = 'SignOff')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLog')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLog')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLogArc')     AND name = 'SignOff')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLogArc')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLogArc')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesRequests50')     AND name = 'Analyser')   BEGIN     ALTER TABLE FaecesRequests50     ADD Analyser nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesRequests50')     AND name = 'Programmed')   BEGIN     ALTER TABLE FaecesRequests50     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ViewedReports')     AND name = 'Usercode')   BEGIN     ALTER TABLE ViewedReports     ADD Usercode nvarchar(5)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemTestDefinitions')     AND name = 'KnownToAnalyser')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD KnownToAnalyser bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintPending')     AND name = 'PrintAction')   BEGIN     ALTER TABLE PrintPending     ADD PrintAction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPOrders')     AND name = 'Programmed')   BEGIN     ALTER TABLE GPOrders     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPOrders')     AND name = 'SampleDate')   BEGIN     ALTER TABLE GPOrders     ADD SampleDate datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PhoneAlert')     AND name = 'PhoneAlertDateTime')   BEGIN     ALTER TABLE PhoneAlert     ADD PhoneAlertDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Reports')     AND name = 'ReportType')   BEGIN     ALTER TABLE Reports     ADD ReportType nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'ScanViewLog'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'UserProfiles'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTResults'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatientLive'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatients'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatientTemp'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'LIHValues'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'IncludeAutoValUrine'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'UserRole'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GPOrders'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GPOrderPatient'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GpordersProfile'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'HaePanels'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'DemographicsUniLabNo'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT TOP 50 * FROM Masks WHERE LIH IS NULL
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/Select * from Options order by ListOrder
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/select * from interp
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[LockStatus]')                AND OBJECTPROPERTY(id, N'IsUserTable') = 1) SELECT SampleID, cast(v as int) & 1 as Demo , cast(v as int) & 2 as Microscopy, cast(v as int) & 4 as Ident, cast(v as int) & 8 as Faeces, cast(v as int) & 16 as CandS , cast(v as int) & 32 as FOB, cast(v as int) & 64 as RotaAdeno, cast(v as int) & 128  as RedSub, cast(v as int) & 256 as RSV , cast(v as int) & 512 as CSF, cast(v as int) & 1024 as CDiff, cast(v as int) & 2048 as OP, cast(v as int) & 4096 as Identification INTO LockStatus FROM PrintValid IF NOT EXISTS (SELECT name FROM sysindexes WHERE name = 'idx_LS_SampleID')   CREATE CLUSTERED INDEX [idx_LS_SampleID] ON [dbo].[LockStatus] ([SampleID])
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[PrintedStatus]')                AND OBJECTPROPERTY(id, N'IsUserTable') = 1) SELECT SampleID, cast(P as int) & 1 as Demo , cast(P as int) & 2 as Microscopy, cast(P as int) & 4 as Ident, cast(P as int) & 8 as Faeces, cast(P as int) & 16 as CandS , cast(P as int) & 32 as FOB, cast(P as int) & 64 as RotaAdeno, cast(P as int) & 128  as RedSub, cast(P as int) & 256 as RSV , cast(P as int) & 512 as CSF, cast(P as int) & 1024 as CDiff, cast(P as int) & 2048 as OP, cast(P as int) & 4096 as Identification INTO PrintedStatus FROM PrintValid IF NOT EXISTS (SELECT name FROM sysindexes WHERE name = 'idx_PS_SampleID')   CREATE CLUSTERED INDEX [idx_PS_SampleID] ON [dbo].[PrintedStatus] ([SampleID])
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'DemogValidation'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'BiomnisRequests'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'ConsultantListLog'
/*21/12/2023 2:53:54 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'MicroAutoCommentAlert'
/*21/12/2023 2:53:56 PM ;  ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'LogOnShowName'
/*21/12/2023 2:53:56 PM ;  ; 6.12.146 ;*/SELECT Name FROM Users WHERE MemberOf = 'Administrators' OR MemberOf = 'Managers' OR MemberOf = 'Users' AND InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:53:59 PM ;  ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'LogOnShowName'
/*21/12/2023 2:53:59 PM ;  ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'LogOnUpperLower'
/*21/12/2023 2:53:59 PM ;  ; 6.12.146 ;*/SELECT Code, MemberOf, LogOffDelay, Name, COALESCE(PassDate, getdate()-1) AS PassDate FROM Users WHERE inuse = 1 and Password = 'gort77' 
/*21/12/2023 2:53:59 PM ; K Gregg ; 6.12.146 ;*/Select * from ActivityLog
/*21/12/2023 2:53:59 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroListMenu'
/*21/12/2023 2:53:59 PM ; K Gregg ; 6.12.146 ;*/IF EXISTS (SELECT * FROM LoggedOnUsers WHERE            MachineName = 'JUNAID'            AND AppName = 'NetAcquire')   UPDATE LoggedOnUsers   SET UserName = 'K Gregg'   WHERE  MachineName = 'JUNAID'   AND AppName = 'NetAcquire'ELSE   INSERT INTO LoggedOnUsers   (MachineName, UserName, AppName)   VALUES   ('JUNAID',    'K Gregg',    'NetAcquire')
/*21/12/2023 2:54:01 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 2:54:01 PM ; K Gregg ; 6.12.146 ;*/SELECT DISTINCT Text, MIN(ListOrder) L FROM Wards WHERE HospitalCode = 'C' AND InUse = 1 GROUP BY Text ORDER BY L
/*21/12/2023 2:54:01 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 2:54:01 PM ; K Gregg ; 6.12.146 ;*/SELECT DISTINCT Text, MIN(ListOrder) L FROM Clinicians WHERE HospitalCode = 'C' AND InUse = 1 AND (Text IS NOT NULL AND Text <> '') GROUP BY Text ORDER BY L
/*21/12/2023 2:54:01 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 2:54:01 PM ; K Gregg ; 6.12.146 ;*/SELECT G.Text, G.Code, G.Addr0, G.Addr1, G.Title, G.ForeName, G.SurName, G.Phone, G.FAX, G.Practice, G.HospitalCode, COALESCE(G.ListOrder, 999) ListOrder, G.MCNumber, G.PracticeNumber, COALESCE(G.InUse, 1) InUse, COALESCE(G.Compiled, 1) Compiled, COALESCE(G.HealthLink, 1) Healthlink, COALESCE(G.PrintReport, 1) PrintReport, COALESCE(E.Include, 0) EGFR, AutoCC, COALESCE(G.Interim, 1) Interim FROM GPs G JOIN IncludeEGFR E ON G.Text = E.SourceName WHERE HospitalCode = 'C' AND E.SourceType = 'GP' AND InUse = '1' ORDER BY ListOrder
/*21/12/2023 2:54:01 PM ; K Gregg ; 6.12.146 ;*/SELECT Text, UPPER(ListType) ListType FROM Lists WHERE ListType IN ('IN', 'CA', 'CR', 'MI', 'SI', 'OV', 'CD', 'HO', 'MQ') AND InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:54:01 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'FX' and InUse = 1 order by ListOrder
/*21/12/2023 2:54:01 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'FS' and InUse = 1 order by ListOrder
/*21/12/2023 2:54:01 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'FP' and InUse = 1 order by ListOrder
/*21/12/2023 2:54:01 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'FA' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:54:01 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'FG' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:54:01 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'OR' and InUse = 1 order by ListOrder
/*21/12/2023 2:54:01 PM ; K Gregg ; 6.12.146 ;*/Select distinct AntibioticName, ListOrder from Antibiotics order by ListOrder
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'BA' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/Select top 10 * from MRU where UserCode = 'KJG' Order by DateTime desc
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroDemTab'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Site, SiteDetails, UserName, DateTimeOfRecord FROM SiteDetails50 WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 * FROM ScannedImages WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 11
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/Select IsNULL(R.Question,'') Question, IsNULL(R.Answer,'') Answer from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '11' AND (Discipline = 'MicroGeneral' OR Discipline = 'Demographic' OR Discipline = 'MicroCS' OR Discipline = 'MicroConsultant' )
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/Select * from PhoneLog where  Cast(SampleID as varchar (100)) = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/Select Distinct IsNULL(RequestID,'') RequestID from ocmRequestDetails Where SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '11' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '11' ORDER BY A.ListOrder
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/ SELECT     D.DoB, D.Ward, D.DateTimeDemographics, D.Age, ISNULL(SD.Site,'') AS Site, I.OrganismGroup, I.OrganismName, I.IsolateNumber
 FROM         demographics AS D INNER JOIN Isolates AS I ON D.SampleID = I.SampleID INNER JOIN SiteDetails50 AS SD ON D.SampleID = SD.SampleID
 WHERE     D.SampleID = '11'

/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'frmEditMicrobiology'      AND ProcedureName = 'LoadIdentification'      AND ErrorLineNumber = '60'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('frmEditMicrobiology',            'LoadIdentification',            '60',            '',            'Control array element ''0'' doesn''t exist',            'K Gregg',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = '',   ErrorDescription = 'Control array element ''0'' doesn''t exist',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = 'K Gregg',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'frmEditMicrobiology'   AND ProcedureName = 'LoadIdentification'   AND ErrorLineNumber = '60'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT I.SampleID, COALESCE(I.IsolateNumber, 1) IsolateNumber, COALESCE(I.OrganismGroup, '') OrganismGroup, COALESCE(I.OrganismName, '') OrganismName, COALESCE(I.Qualifier, '') Qualifier, COALESCE(I.UserName, '') UserName, COALESCE(I.RecordDateTime, '1/1/1900') RecordDateTime, COALESCE(PV.Valid, 0) Valid, COALESCE(PV.Printed, 0) Printed FROM Isolates I LEFT JOIN PrintValidLog PV ON I.SampleID = PV.SampleID WHERE I.SampleID = '11' ORDER BY I.IsolateNumber
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '11' and Valid = 1
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50 F WHERE F.SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50Audit F WHERE F.SampleID = '11' ORDER BY F.DateTimeOfRecord desc
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/Select * from ConsultantList Order by SampleID
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM Isolates WHERE SampleID = '10'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(FOB, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RotaAdeno, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CDiff, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(OP, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CSF, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RSV, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RedSub, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesRepeats WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesArc WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesRepeats WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesArc WHERE SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Reports WHERE SampleID = '11' AND Dept = 'Microbiology'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE COALESCE(ForMicro, 0) <> 0 AND SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 11
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'EnableMicroNotepad'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 ReportType FROM REPORTS WHERE SampleID ='11' ORDER BY PRINTTIME DESC
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'BB' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'RR' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'WW' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '11' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:54:02 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'HealthLinkDeptMicro'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroLists'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'frmEditMicrobiology'      AND ProcedureName = 'LoadIdentification'      AND ErrorLineNumber = '60'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('frmEditMicrobiology',            'LoadIdentification',            '60',            '',            'Control array element ''0'' doesn''t exist',            'K Gregg',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = '',   ErrorDescription = 'Control array element ''0'' doesn''t exist',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = 'K Gregg',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'frmEditMicrobiology'   AND ProcedureName = 'LoadIdentification'   AND ErrorLineNumber = '60'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '11' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Site, SiteDetails, UserName, DateTimeOfRecord FROM SiteDetails50 WHERE SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 * FROM ScannedImages WHERE SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 11
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/Select IsNULL(R.Question,'') Question, IsNULL(R.Answer,'') Answer from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '11' AND (Discipline = 'MicroGeneral' OR Discipline = 'Demographic' OR Discipline = 'MicroCS' OR Discipline = 'MicroConsultant' )
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/Select * from PhoneLog where  Cast(SampleID as varchar (100)) = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/Select Distinct IsNULL(RequestID,'') RequestID from ocmRequestDetails Where SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '11' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '11' ORDER BY A.ListOrder
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/ SELECT     D.DoB, D.Ward, D.DateTimeDemographics, D.Age, ISNULL(SD.Site,'') AS Site, I.OrganismGroup, I.OrganismName, I.IsolateNumber
 FROM         demographics AS D INNER JOIN Isolates AS I ON D.SampleID = I.SampleID INNER JOIN SiteDetails50 AS SD ON D.SampleID = SD.SampleID
 WHERE     D.SampleID = '11'

/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'frmEditMicrobiology'      AND ProcedureName = 'LoadIdentification'      AND ErrorLineNumber = '60'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('frmEditMicrobiology',            'LoadIdentification',            '60',            '',            'Control array element ''0'' doesn''t exist',            'K Gregg',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = '',   ErrorDescription = 'Control array element ''0'' doesn''t exist',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = 'K Gregg',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'frmEditMicrobiology'   AND ProcedureName = 'LoadIdentification'   AND ErrorLineNumber = '60'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT I.SampleID, COALESCE(I.IsolateNumber, 1) IsolateNumber, COALESCE(I.OrganismGroup, '') OrganismGroup, COALESCE(I.OrganismName, '') OrganismName, COALESCE(I.Qualifier, '') Qualifier, COALESCE(I.UserName, '') UserName, COALESCE(I.RecordDateTime, '1/1/1900') RecordDateTime, COALESCE(PV.Valid, 0) Valid, COALESCE(PV.Printed, 0) Printed FROM Isolates I LEFT JOIN PrintValidLog PV ON I.SampleID = PV.SampleID WHERE I.SampleID = '11' ORDER BY I.IsolateNumber
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '11' and Valid = 1
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50 F WHERE F.SampleID = '11'
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50Audit F WHERE F.SampleID = '11' ORDER BY F.DateTimeOfRecord desc
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/Select * from ConsultantList Order by SampleID
/*21/12/2023 2:54:05 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM Isolates WHERE SampleID = '10'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(FOB, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RotaAdeno, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CDiff, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(OP, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CSF, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RSV, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RedSub, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesRepeats WHERE SampleID = '11'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesArc WHERE SampleID = '11'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesRepeats WHERE SampleID = '11'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesArc WHERE SampleID = '11'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Reports WHERE SampleID = '11' AND Dept = 'Microbiology'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE COALESCE(ForMicro, 0) <> 0 AND SampleID = '11'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 11
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'EnableMicroNotepad'
/*21/12/2023 2:54:06 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 ReportType FROM REPORTS WHERE SampleID ='11' ORDER BY PRINTTIME DESC
/*21/12/2023 2:54:09 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:09 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:09 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '11' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:54:30 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroLists'
/*21/12/2023 2:54:30 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:54:30 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagTestDefinitions')     AND name = 'PrintRefRange')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD PrintRefRange tinyint NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'UserName')   BEGIN     ALTER TABLE GenericResults     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE GenericResults     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'Valid')   BEGIN     ALTER TABLE GenericResults     ADD Valid tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'ValidatedBy')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GenericResults')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'UserName')   BEGIN     ALTER TABLE ExternalDefinitions     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE ExternalDefinitions     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'Department')   BEGIN     ALTER TABLE ExternalDefinitions     ADD Department nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('eAddress')     AND name = 'ListOrder')   BEGIN     ALTER TABLE eAddress     ADD ListOrder int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('eAddress')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE eAddress     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('eAddress')     AND name = 'UserName')   BEGIN     ALTER TABLE eAddress     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Sensitivities')     AND name = 'DateTimeOfRecord')   BEGIN     ALTER TABLE Sensitivities     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Reports')     AND name = 'Hidden')   BEGIN     ALTER TABLE Reports     ADD Hidden tinyint NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'PrintedDateTime')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'ValidatedBy')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesResults50')     AND name = 'PrintedBy')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioTestDefinitions')     AND name = 'HealthLinkPanel')   BEGIN     ALTER TABLE BioTestDefinitions     ADD HealthLinkPanel nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRequests')     AND name = 'AddOn')   BEGIN     ALTER TABLE BioRequests     ADD AddOn bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PhoneLog')     AND name = 'Direction')   BEGIN     ALTER TABLE PhoneLog     ADD Direction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Antibiotics')     AND name = 'ViewInGrid')   BEGIN     ALTER TABLE Antibiotics     ADD ViewInGrid bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPs')     AND name = 'PrintReport')   BEGIN     ALTER TABLE GPs     ADD PrintReport bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPs')     AND name = 'Interim')   BEGIN     ALTER TABLE GPs     ADD Interim bit NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Counter')   BEGIN     ALTER TABLE MedibridgeResults     ADD Counter numeric(18, 0) IDENTITY(1,1) NOT NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Analyte')   BEGIN     ALTER TABLE MedibridgeResults     ADD Analyte nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Chart')   BEGIN     ALTER TABLE MedibridgeResults     ADD Chart nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'FileName')   BEGIN     ALTER TABLE MedibridgeResults     ADD FileName nvarchar(500) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('MedibridgeResults')     AND name = 'Units')   BEGIN     ALTER TABLE MedibridgeResults     ADD Units nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Demographics')     AND name = 'MicroHealthLinkReleaseTime')   BEGIN     ALTER TABLE Demographics     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:31 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('DemographicsAudit')     AND name = 'MicroHealthLinkReleaseTime')   BEGIN     ALTER TABLE DemographicsAudit     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ExternalDefinitions')     AND name = 'BiomnisCode')   BEGIN     ALTER TABLE ExternalDefinitions     ADD BiomnisCode nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('AnalyserTestCodeMapping')     AND name = 'Department')   BEGIN     ALTER TABLE AnalyserTestCodeMapping     ADD Department nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BIOTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioTestDefinitionsArc')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE BioTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('EndTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE EndTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('EndTestDefinitionsArc')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE EndTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmTestDefinitions')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE ImmTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmTestDefinitionsArc')     AND name = 'DeltaDaysBackLimit')   BEGIN     ALTER TABLE ImmTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM Lists WHERE     Code = 'B'     AND Text = 'Biomnis'     AND ListType = 'AC')   BEGIN     INSERT INTO Lists (Code, Text, ListType, InUse, ListOrder)     VALUES ('B', 'Biomnis', 'AC', '1', 999)   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE CoagResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE HaemRepeats50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRequestsAudit')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioRequestsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BIOTestDefinitions')     AND name = 'HealthLink')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD HealthLink Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BIOTestDefinitions')     AND name = 'Accredited')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD Accredited Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE HaemResults50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('demographics')     AND name = 'LabNo')   BEGIN     ALTER TABLE demographics     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('demographicsAudit')     AND name = 'LabNo')   BEGIN     ALTER TABLE demographicsAudit     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'MedRenal')   BEGIN     ALTER TABLE BioRepeats     ADD MedRenal tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE BioRepeats     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'ValidatedDateTime')   BEGIN     ALTER TABLE BioResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'ValidateTime')   BEGIN     ALTER TABLE BioRepeats     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRequests')     AND name = 'GBottle')   BEGIN     ALTER TABLE BioRequests     ADD GBottle Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemResults50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemResults50')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'SignOff')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemRepeats50')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('TempHaem')     AND name = 'SignOff')   BEGIN     ALTER TABLE TempHaem     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('TempHaem')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE TempHaem     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('TempHaem')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE TempHaem     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE BioResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE BioResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE BioResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE BioRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'SignOff')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('BioResultsAudit')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE CoagResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE CoagResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE CoagResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('CoagRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmResults')     AND name = 'SignOff')   BEGIN     ALTER TABLE ImmResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmResults')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE ImmResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmResults')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE ImmResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmRepeats')     AND name = 'SignOff')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmRepeats')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ImmRepeats')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLog')     AND name = 'SignOff')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLog')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLog')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLogArc')     AND name = 'SignOff')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLogArc')     AND name = 'SignOffBy')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintValidLogArc')     AND name = 'SignOffDateTime')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesRequests50')     AND name = 'Analyser')   BEGIN     ALTER TABLE FaecesRequests50     ADD Analyser nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('FaecesRequests50')     AND name = 'Programmed')   BEGIN     ALTER TABLE FaecesRequests50     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('ViewedReports')     AND name = 'Usercode')   BEGIN     ALTER TABLE ViewedReports     ADD Usercode nvarchar(5)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('HaemTestDefinitions')     AND name = 'KnownToAnalyser')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD KnownToAnalyser bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PrintPending')     AND name = 'PrintAction')   BEGIN     ALTER TABLE PrintPending     ADD PrintAction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPOrders')     AND name = 'Programmed')   BEGIN     ALTER TABLE GPOrders     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('GPOrders')     AND name = 'SampleDate')   BEGIN     ALTER TABLE GPOrders     ADD SampleDate datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('PhoneAlert')     AND name = 'PhoneAlertDateTime')   BEGIN     ALTER TABLE PhoneAlert     ADD PhoneAlertDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id('Reports')     AND name = 'ReportType')   BEGIN     ALTER TABLE Reports     ADD ReportType nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'ScanViewLog'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'UserProfiles'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTResults'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatientLive'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatients'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatientTemp'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'LIHValues'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'IncludeAutoValUrine'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'UserRole'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GPOrders'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GPOrderPatient'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GpordersProfile'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'HaePanels'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'DemographicsUniLabNo'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT TOP 50 * FROM Masks WHERE LIH IS NULL
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/Select * from Options order by ListOrder
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/select * from interp
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[LockStatus]')                AND OBJECTPROPERTY(id, N'IsUserTable') = 1) SELECT SampleID, cast(v as int) & 1 as Demo , cast(v as int) & 2 as Microscopy, cast(v as int) & 4 as Ident, cast(v as int) & 8 as Faeces, cast(v as int) & 16 as CandS , cast(v as int) & 32 as FOB, cast(v as int) & 64 as RotaAdeno, cast(v as int) & 128  as RedSub, cast(v as int) & 256 as RSV , cast(v as int) & 512 as CSF, cast(v as int) & 1024 as CDiff, cast(v as int) & 2048 as OP, cast(v as int) & 4096 as Identification INTO LockStatus FROM PrintValid IF NOT EXISTS (SELECT name FROM sysindexes WHERE name = 'idx_LS_SampleID')   CREATE CLUSTERED INDEX [idx_LS_SampleID] ON [dbo].[LockStatus] ([SampleID])
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[PrintedStatus]')                AND OBJECTPROPERTY(id, N'IsUserTable') = 1) SELECT SampleID, cast(P as int) & 1 as Demo , cast(P as int) & 2 as Microscopy, cast(P as int) & 4 as Ident, cast(P as int) & 8 as Faeces, cast(P as int) & 16 as CandS , cast(P as int) & 32 as FOB, cast(P as int) & 64 as RotaAdeno, cast(P as int) & 128  as RedSub, cast(P as int) & 256 as RSV , cast(P as int) & 512 as CSF, cast(P as int) & 1024 as CDiff, cast(P as int) & 2048 as OP, cast(P as int) & 4096 as Identification INTO PrintedStatus FROM PrintValid IF NOT EXISTS (SELECT name FROM sysindexes WHERE name = 'idx_PS_SampleID')   CREATE CLUSTERED INDEX [idx_PS_SampleID] ON [dbo].[PrintedStatus] ([SampleID])
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'DemogValidation'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'BiomnisRequests'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'ConsultantListLog'
/*21/12/2023 2:56:32 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'MicroAutoCommentAlert'
/*21/12/2023 2:56:34 PM ;  ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'LogOnShowName'
/*21/12/2023 2:56:34 PM ;  ; 6.12.146 ;*/SELECT Name FROM Users WHERE MemberOf = 'Administrators' OR MemberOf = 'Managers' OR MemberOf = 'Users' AND InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:56:37 PM ;  ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'LogOnShowName'
/*21/12/2023 2:56:37 PM ;  ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'LogOnUpperLower'
/*21/12/2023 2:56:37 PM ;  ; 6.12.146 ;*/SELECT Code, MemberOf, LogOffDelay, Name, COALESCE(PassDate, getdate()-1) AS PassDate FROM Users WHERE inuse = 1 and Password = 'gort77' 
/*21/12/2023 2:56:37 PM ; K Gregg ; 6.12.146 ;*/Select * from ActivityLog
/*21/12/2023 2:56:37 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroListMenu'
/*21/12/2023 2:56:37 PM ; K Gregg ; 6.12.146 ;*/IF EXISTS (SELECT * FROM LoggedOnUsers WHERE            MachineName = 'JUNAID'            AND AppName = 'NetAcquire')   UPDATE LoggedOnUsers   SET UserName = 'K Gregg'   WHERE  MachineName = 'JUNAID'   AND AppName = 'NetAcquire'ELSE   INSERT INTO LoggedOnUsers   (MachineName, UserName, AppName)   VALUES   ('JUNAID',    'K Gregg',    'NetAcquire')
/*21/12/2023 2:56:39 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 2:56:39 PM ; K Gregg ; 6.12.146 ;*/SELECT DISTINCT Text, MIN(ListOrder) L FROM Wards WHERE HospitalCode = 'C' AND InUse = 1 GROUP BY Text ORDER BY L
/*21/12/2023 2:56:39 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 2:56:39 PM ; K Gregg ; 6.12.146 ;*/SELECT DISTINCT Text, MIN(ListOrder) L FROM Clinicians WHERE HospitalCode = 'C' AND InUse = 1 AND (Text IS NOT NULL AND Text <> '') GROUP BY Text ORDER BY L
/*21/12/2023 2:56:39 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 2:56:39 PM ; K Gregg ; 6.12.146 ;*/SELECT G.Text, G.Code, G.Addr0, G.Addr1, G.Title, G.ForeName, G.SurName, G.Phone, G.FAX, G.Practice, G.HospitalCode, COALESCE(G.ListOrder, 999) ListOrder, G.MCNumber, G.PracticeNumber, COALESCE(G.InUse, 1) InUse, COALESCE(G.Compiled, 1) Compiled, COALESCE(G.HealthLink, 1) Healthlink, COALESCE(G.PrintReport, 1) PrintReport, COALESCE(E.Include, 0) EGFR, AutoCC, COALESCE(G.Interim, 1) Interim FROM GPs G JOIN IncludeEGFR E ON G.Text = E.SourceName WHERE HospitalCode = 'C' AND E.SourceType = 'GP' AND InUse = '1' ORDER BY ListOrder
/*21/12/2023 2:56:39 PM ; K Gregg ; 6.12.146 ;*/SELECT Text, UPPER(ListType) ListType FROM Lists WHERE ListType IN ('IN', 'CA', 'CR', 'MI', 'SI', 'OV', 'CD', 'HO', 'MQ') AND InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:56:39 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'FX' and InUse = 1 order by ListOrder
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'FS' and InUse = 1 order by ListOrder
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'FP' and InUse = 1 order by ListOrder
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'FA' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'FG' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'OR' and InUse = 1 order by ListOrder
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/Select distinct AntibioticName, ListOrder from Antibiotics order by ListOrder
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/Select Text from Lists where ListType = 'BA' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/Select top 10 * from MRU where UserCode = 'KJG' Order by DateTime desc
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroDemTab'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Site, SiteDetails, UserName, DateTimeOfRecord FROM SiteDetails50 WHERE SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 * FROM ScannedImages WHERE SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 11
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/Select IsNULL(R.Question,'') Question, IsNULL(R.Answer,'') Answer from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '11' AND (Discipline = 'MicroGeneral' OR Discipline = 'Demographic' OR Discipline = 'MicroCS' OR Discipline = 'MicroConsultant' )
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/Select * from PhoneLog where  Cast(SampleID as varchar (100)) = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/Select Distinct IsNULL(RequestID,'') RequestID from ocmRequestDetails Where SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '11' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '11' ORDER BY A.ListOrder
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/ SELECT     D.DoB, D.Ward, D.DateTimeDemographics, D.Age, ISNULL(SD.Site,'') AS Site, I.OrganismGroup, I.OrganismName, I.IsolateNumber
 FROM         demographics AS D INNER JOIN Isolates AS I ON D.SampleID = I.SampleID INNER JOIN SiteDetails50 AS SD ON D.SampleID = SD.SampleID
 WHERE     D.SampleID = '11'

/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:56:40 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT I.SampleID, COALESCE(I.IsolateNumber, 1) IsolateNumber, COALESCE(I.OrganismGroup, '') OrganismGroup, COALESCE(I.OrganismName, '') OrganismName, COALESCE(I.Qualifier, '') Qualifier, COALESCE(I.UserName, '') UserName, COALESCE(I.RecordDateTime, '1/1/1900') RecordDateTime, COALESCE(PV.Valid, 0) Valid, COALESCE(PV.Printed, 0) Printed FROM Isolates I LEFT JOIN PrintValidLog PV ON I.SampleID = PV.SampleID WHERE I.SampleID = '11' ORDER BY I.IsolateNumber
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '11' and Valid = 1
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50 F WHERE F.SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50Audit F WHERE F.SampleID = '11' ORDER BY F.DateTimeOfRecord desc
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/Select * from ConsultantList Order by SampleID
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM Isolates WHERE SampleID = '10'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(FOB, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RotaAdeno, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CDiff, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(OP, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CSF, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RSV, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RedSub, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesRepeats WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesArc WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesRepeats WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesArc WHERE SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Reports WHERE SampleID = '11' AND Dept = 'Microbiology'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE COALESCE(ForMicro, 0) <> 0 AND SampleID = '11'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 11
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'EnableMicroNotepad'
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 ReportType FROM REPORTS WHERE SampleID ='11' ORDER BY PRINTTIME DESC
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'BB' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'RR' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT Text FROM Lists WHERE ListType = 'WW' and InUse = 1 ORDER BY ListOrder
/*21/12/2023 2:56:43 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'HealthLinkDeptMicro'
/*21/12/2023 2:56:45 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroLists'
/*21/12/2023 2:56:45 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:56:45 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:56:46 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '11'
/*21/12/2023 2:56:47 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '11' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:57:10 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:57:10 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:57:10 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '11' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:57:10 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '11'
/*21/12/2023 2:57:10 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Site, SiteDetails, UserName, DateTimeOfRecord FROM SiteDetails50 WHERE SampleID = '11'
/*21/12/2023 2:57:10 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '11'
/*21/12/2023 2:57:10 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '11'
/*21/12/2023 2:57:10 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '11'
/*21/12/2023 2:57:10 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 * FROM ScannedImages WHERE SampleID = '11'
/*21/12/2023 2:57:10 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 11
/*21/12/2023 2:57:10 PM ; K Gregg ; 6.12.146 ;*/Select IsNULL(R.Question,'') Question, IsNULL(R.Answer,'') Answer from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '11'
/*21/12/2023 2:57:10 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '11' AND (Discipline = 'MicroGeneral' OR Discipline = 'Demographic' OR Discipline = 'MicroCS' OR Discipline = 'MicroConsultant' )
/*21/12/2023 2:57:10 PM ; K Gregg ; 6.12.146 ;*/Select * from PhoneLog where  Cast(SampleID as varchar (100)) = '11'
/*21/12/2023 2:57:11 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '11'
/*21/12/2023 2:57:11 PM ; K Gregg ; 6.12.146 ;*/Select Distinct IsNULL(RequestID,'') RequestID from ocmRequestDetails Where SampleID = '11'
/*21/12/2023 2:57:11 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 2:57:11 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '11' AND Department = 'M' AND Valid = 1
/*21/12/2023 2:57:11 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:57:11 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:57:11 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '11' ORDER BY A.ListOrder
/*21/12/2023 2:57:11 PM ; K Gregg ; 6.12.146 ;*/ SELECT     D.DoB, D.Ward, D.DateTimeDemographics, D.Age, ISNULL(SD.Site,'') AS Site, I.OrganismGroup, I.OrganismName, I.IsolateNumber
 FROM         demographics AS D INNER JOIN Isolates AS I ON D.SampleID = I.SampleID INNER JOIN SiteDetails50 AS SD ON D.SampleID = SD.SampleID
 WHERE     D.SampleID = '11'

/*21/12/2023 2:57:11 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '11'
/*21/12/2023 2:57:11 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:57:11 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '11'
/*21/12/2023 2:57:11 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '11'
/*21/12/2023 2:57:11 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '11'
/*21/12/2023 2:57:11 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT I.SampleID, COALESCE(I.IsolateNumber, 1) IsolateNumber, COALESCE(I.OrganismGroup, '') OrganismGroup, COALESCE(I.OrganismName, '') OrganismName, COALESCE(I.Qualifier, '') Qualifier, COALESCE(I.UserName, '') UserName, COALESCE(I.RecordDateTime, '1/1/1900') RecordDateTime, COALESCE(PV.Valid, 0) Valid, COALESCE(PV.Printed, 0) Printed FROM Isolates I LEFT JOIN PrintValidLog PV ON I.SampleID = PV.SampleID WHERE I.SampleID = '11' ORDER BY I.IsolateNumber
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '11' and Valid = 1
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50 F WHERE F.SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50Audit F WHERE F.SampleID = '11' ORDER BY F.DateTimeOfRecord desc
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/Select * from ConsultantList Order by SampleID
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM Isolates WHERE SampleID = '10'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(FOB, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RotaAdeno, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CDiff, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(OP, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CSF, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RSV, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RedSub, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM PrintedStatus WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesRepeats WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesArc WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesRepeats WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesArc WHERE SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Reports WHERE SampleID = '11' AND Dept = 'Microbiology'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE COALESCE(ForMicro, 0) <> 0 AND SampleID = '11'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 11
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'EnableMicroNotepad'
/*21/12/2023 2:57:14 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 ReportType FROM REPORTS WHERE SampleID ='11' ORDER BY PRINTTIME DESC
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Site, SiteDetails, UserName, DateTimeOfRecord FROM SiteDetails50 WHERE SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 * FROM ScannedImages WHERE SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 12
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/Select IsNULL(R.Question,'') Question, IsNULL(R.Answer,'') Answer from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '12' AND (Discipline = 'MicroGeneral' OR Discipline = 'Demographic' OR Discipline = 'MicroCS' OR Discipline = 'MicroConsultant' )
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/Select PatName from Demographics where SampleID = 11 and PatName <> '' and PatName is not null and DoB is not null
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/Select * from PhoneLog where  Cast(SampleID as varchar (100)) = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/Select Distinct IsNULL(RequestID,'') RequestID from ocmRequestDetails Where SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '12' AND Department = 'M' AND Valid = 1
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '12' ORDER BY A.ListOrder
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/ SELECT     D.DoB, D.Ward, D.DateTimeDemographics, D.Age, ISNULL(SD.Site,'') AS Site, I.OrganismGroup, I.OrganismName, I.IsolateNumber
 FROM         demographics AS D INNER JOIN Isolates AS I ON D.SampleID = I.SampleID INNER JOIN SiteDetails50 AS SD ON D.SampleID = SD.SampleID
 WHERE     D.SampleID = '12'

/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '12'
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/SELECT I.SampleID, COALESCE(I.IsolateNumber, 1) IsolateNumber, COALESCE(I.OrganismGroup, '') OrganismGroup, COALESCE(I.OrganismName, '') OrganismName, COALESCE(I.Qualifier, '') Qualifier, COALESCE(I.UserName, '') UserName, COALESCE(I.RecordDateTime, '1/1/1900') RecordDateTime, COALESCE(PV.Valid, 0) Valid, COALESCE(PV.Printed, 0) Printed FROM Isolates I LEFT JOIN PrintValidLog PV ON I.SampleID = PV.SampleID WHERE I.SampleID = '12' ORDER BY I.IsolateNumber
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '12' and Valid = 1
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:00:16 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50 F WHERE F.SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50Audit F WHERE F.SampleID = '12' ORDER BY F.DateTimeOfRecord desc
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/Select * from ConsultantList Order by SampleID
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM Isolates WHERE SampleID = '11'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(FOB, 0) AS Status FROM PrintedStatus WHERE SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RotaAdeno, 0) AS Status FROM PrintedStatus WHERE SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CDiff, 0) AS Status FROM PrintedStatus WHERE SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(OP, 0) AS Status FROM PrintedStatus WHERE SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CSF, 0) AS Status FROM PrintedStatus WHERE SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RSV, 0) AS Status FROM PrintedStatus WHERE SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RedSub, 0) AS Status FROM PrintedStatus WHERE SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM PrintedStatus WHERE SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesRepeats WHERE SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesArc WHERE SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesRepeats WHERE SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesArc WHERE SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Reports WHERE SampleID = '12' AND Dept = 'Microbiology'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE COALESCE(ForMicro, 0) <> 0 AND SampleID = '12'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 12
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'EnableMicroNotepad'
/*21/12/2023 3:00:17 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 ReportType FROM REPORTS WHERE SampleID ='12' ORDER BY PRINTTIME DESC
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Site, SiteDetails, UserName, DateTimeOfRecord FROM SiteDetails50 WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 * FROM ScannedImages WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 8314527
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/Select IsNULL(R.Question,'') Question, IsNULL(R.Answer,'') Answer from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '8314527' AND (Discipline = 'MicroGeneral' OR Discipline = 'Demographic' OR Discipline = 'MicroCS' OR Discipline = 'MicroConsultant' )
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/Select PatName from Demographics where SampleID = 8314526 and PatName <> '' and PatName is not null and DoB is not null
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/Select * from PhoneLog where  Cast(SampleID as varchar (100)) = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/Select Distinct IsNULL(RequestID,'') RequestID from ocmRequestDetails Where SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '8314527' AND Department = 'M' AND Valid = 1
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '8314527' ORDER BY A.ListOrder
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/ SELECT     D.DoB, D.Ward, D.DateTimeDemographics, D.Age, ISNULL(SD.Site,'') AS Site, I.OrganismGroup, I.OrganismName, I.IsolateNumber
 FROM         demographics AS D INNER JOIN Isolates AS I ON D.SampleID = I.SampleID INNER JOIN SiteDetails50 AS SD ON D.SampleID = SD.SampleID
 WHERE     D.SampleID = '8314527'

/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT I.SampleID, COALESCE(I.IsolateNumber, 1) IsolateNumber, COALESCE(I.OrganismGroup, '') OrganismGroup, COALESCE(I.OrganismName, '') OrganismName, COALESCE(I.Qualifier, '') Qualifier, COALESCE(I.UserName, '') UserName, COALESCE(I.RecordDateTime, '1/1/1900') RecordDateTime, COALESCE(PV.Valid, 0) Valid, COALESCE(PV.Printed, 0) Printed FROM Isolates I LEFT JOIN PrintValidLog PV ON I.SampleID = PV.SampleID WHERE I.SampleID = '8314527' ORDER BY I.IsolateNumber
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '8314527' and Valid = 1
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50 F WHERE F.SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50Audit F WHERE F.SampleID = '8314527' ORDER BY F.DateTimeOfRecord desc
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/Select * from ConsultantList Order by SampleID
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM Isolates WHERE SampleID = '8314526'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(FOB, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RotaAdeno, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CDiff, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(OP, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CSF, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RSV, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RedSub, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesRepeats WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesArc WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesRepeats WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesArc WHERE SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Reports WHERE SampleID = '8314527' AND Dept = 'Microbiology'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE COALESCE(ForMicro, 0) <> 0 AND SampleID = '8314527'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 8314527
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'EnableMicroNotepad'
/*21/12/2023 3:00:34 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 ReportType FROM REPORTS WHERE SampleID ='8314527' ORDER BY PRINTTIME DESC
/*21/12/2023 3:01:04 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'DEMOGRAPHICSNAMECAPS'
/*21/12/2023 3:01:04 PM ; K Gregg ; 6.12.146 ;*/SELECT Sex FROM SexNames WHERE Name = ''
/*21/12/2023 3:01:14 PM ; K Gregg ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'frmEditAll'      AND ProcedureName = 'LoadMatchingDemo'      AND ErrorLineNumber = '20'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('frmEditAll',            'LoadMatchingDemo',            '20',            '',            'Overflow',            'K Gregg',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = '',   ErrorDescription = 'Overflow',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = 'K Gregg',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'frmEditAll'   AND ProcedureName = 'LoadMatchingDemo'   AND ErrorLineNumber = '20'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 3:01:17 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 3:01:17 PM ; K Gregg ; 6.12.146 ;*/Select [Text] from Wards where HospitalCode = 'C' and Inuse = 1 and (Code = 'GP' or [Text] = 'GP')
/*21/12/2023 3:01:17 PM ; K Gregg ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'frmEditAll'      AND ProcedureName = 'LoadMatchingDemo'      AND ErrorLineNumber = '20'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('frmEditAll',            'LoadMatchingDemo',            '20',            '',            'Overflow',            'K Gregg',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = '',   ErrorDescription = 'Overflow',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = 'K Gregg',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'frmEditAll'   AND ProcedureName = 'LoadMatchingDemo'   AND ErrorLineNumber = '20'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*21/12/2023 3:01:26 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 3:01:26 PM ; K Gregg ; 6.12.146 ;*/Select [Text] from Wards where HospitalCode = 'C' and Inuse = 1 and (Code = 'GP' or [Text] = 'GP')
/*21/12/2023 3:02:20 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 3:02:20 PM ; K Gregg ; 6.12.146 ;*/Select [Text] from Wards where HospitalCode = 'C' and Inuse = 1 and (Code = 'Paediatrics' or [Text] = 'Paediatrics')
/*21/12/2023 3:02:24 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 3:02:24 PM ; K Gregg ; 6.12.146 ;*/Select * from Clinicians where (Code = 'DR ZUBAIR AHMED' or Text = 'DR ZUBAIR AHMED') and InUse = 1And HospitalCode = 'C' and InUse = 1
/*21/12/2023 3:02:24 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '8314527'
/*21/12/2023 3:02:26 PM ; K Gregg ; 6.12.146 ;*/Delete from UrineRequests50 where SampleID = '8314527'
/*21/12/2023 3:02:26 PM ; K Gregg ; 6.12.146 ;*/INSERT INTO UrineRequests50 (SampleID, Request, UserName) VALUES ('8314527',  'CS',  'K Gregg')
/*21/12/2023 3:02:26 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'HealthLinkDeptMicro'
/*21/12/2023 3:02:26 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '8314527'
/*21/12/2023 3:02:26 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314527'
/*21/12/2023 3:02:26 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '8314527'
/*21/12/2023 3:02:26 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '8314527'
/*21/12/2023 3:02:26 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '8314527'
/*21/12/2023 3:02:26 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314527'
/*21/12/2023 3:02:26 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '8314527'
/*21/12/2023 3:02:26 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '8314527'
/*21/12/2023 3:02:26 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '8314527'
/*21/12/2023 3:02:33 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroDemSave'
/*21/12/2023 3:02:33 PM ; K Gregg ; 6.12.146 ;*/SELECT Location FROM Wards WHERE Text = 'Paediatrics'
/*21/12/2023 3:02:44 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'HealthLinkDeptMicro'
/*21/12/2023 3:02:46 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'HealthLinkDeptMicro'
/*21/12/2023 3:02:51 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'HealthLinkDeptMicro'
/*21/12/2023 3:03:02 PM ; K Gregg ; 6.12.146 ;*/select Top 1 ISNULL(LabNo,0) as LabNo  from DemographicsUniLabNo As D   WHERE ISNULL(LabNo,0)  <> 0 AND  D.PatName='TEST PAT1' AND DoB = '12/Dec/1985' ORDER BY DateTimeOfRecord DESC 
/*21/12/2023 3:03:02 PM ; K Gregg ; 6.12.146 ;*/Select MAX(CAST(LabNo AS FLOAT)) as MaxID from demographics
/*21/12/2023 3:03:02 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'ReservedLabID'
/*21/12/2023 3:03:02 PM ; K Gregg ; 6.12.146 ;*/IF EXISTS (SELECT * FROM Options WHERE            Description = 'ReservedLabID')   UPDATE Options   SET Contents = '18317291'   WHERE Description = 'ReservedLabID' ELSE   INSERT INTO Options (Description, Contents) VALUES   ('ReservedLabID',   '18317291')
/*21/12/2023 3:03:02 PM ; K Gregg ; 6.12.146 ;*/insert into DemographicsUniLabNo (SampleID, [User], PatName, DoB, Sex, Chart, LabNo,DateTimeOfRecord ) Values (
'','K Gregg','TEST PAT1','1985-12-12','Male','',18317291,'2023-12-21 15:03:02')
/*21/12/2023 3:03:02 PM ; K Gregg ; 6.12.146 ;*/IF EXISTS (SELECT * FROM SiteDetails50 WHERE            SampleID = '8314527')   UPDATE SiteDetails50   SET Site = 'Urine',   SiteDetails = 'MSU',   UserName = 'K Gregg'   WHERE SampleID = '8314527' ELSE   INSERT INTO SiteDetails50 (SampleID, Site, SiteDetails, UserName)   VALUES   ('8314527',   'Urine',   'MSU',   'K Gregg')
/*21/12/2023 3:03:02 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '8314527' ORDER BY A.ListOrder
/*21/12/2023 3:03:02 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '8314527' and Valid = 1
/*21/12/2023 3:03:02 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:03:02 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:03:02 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:03:02 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:03:02 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '8314527'
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '8314527'
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/update Demographics set DateTimeDemographics = '21/Dec/2023 15:03:03' where SampleID = '8314527' and DateTimeDemographics is null
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Select top 10 * from MRU where UserCode = 'KJG' Order by DateTime desc
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Delete from MRU where UserCode = 'KJG'
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('11', '21/Dec/2023 14:51:09', 'KJG')
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('10', '21/Dec/2023 14:50:02', 'KJG')
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('9', '20/Dec/2023 15:51:39', 'KJG')
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('8', '20/Dec/2023 15:37:26', 'KJG')
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000030', '28/Nov/2023 16:14:08', 'KJG')
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000029', '27/Nov/2023 21:44:15', 'KJG')
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000028', '23/Nov/2023 20:36:17', 'KJG')
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('3777528', '23/Nov/2023 14:51:57', 'KJG')
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('3777529', '23/Nov/2023 14:51:40', 'KJG')
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('8314527', '21/Dec/2023 15:03:03', 'KJG')
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Select top 10 * from MRU where UserCode = 'KJG' Order by DateTime desc
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Select RID from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '8314527'
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/Select RID from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '8314527'
/*21/12/2023 3:03:03 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'HealthLinkDeptMicro'
/*21/12/2023 3:03:08 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroLists'
/*21/12/2023 3:03:08 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314527'
/*21/12/2023 3:03:08 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314527'
/*21/12/2023 3:03:08 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '8314527'
/*21/12/2023 3:03:08 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '8314527' AND Department = 'M' AND Valid = 1
/*21/12/2023 3:03:19 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314527'
/*21/12/2023 3:03:19 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314527'
/*21/12/2023 3:03:19 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '8314527' AND Department = 'M' AND Valid = 1
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '8314528'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Site, SiteDetails, UserName, DateTimeOfRecord FROM SiteDetails50 WHERE SampleID = '8314528'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, COALESCE(Entry, 0) Entry, Antibiotic, UserName, DateTimeOfRecord FROM CurrentAntibiotics50 WHERE SampleID = '8314528'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '8314528'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 * FROM ScannedImages WHERE SampleID = '8314528'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 8314528
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/Select IsNULL(R.Question,'') Question, IsNULL(R.Answer,'') Answer from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '8314528'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM Observations WHERE SampleID = '8314528' AND (Discipline = 'MicroGeneral' OR Discipline = 'Demographic' OR Discipline = 'MicroCS' OR Discipline = 'MicroConsultant' )
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/Select PatName from Demographics where SampleID = 8314527 and PatName <> '' and PatName is not null and DoB is not null
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/Select * from PhoneLog where  Cast(SampleID as varchar (100)) = '8314528'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/Select * from SendCopyTo where SampleID = '8314528'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/Select Distinct IsNULL(RequestID,'') RequestID from ocmRequestDetails Where SampleID = '8314528'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroOtherTabs'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '8314528' AND Department = 'M' AND Valid = 1
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314528'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314528'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '8314528' ORDER BY A.ListOrder
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/ SELECT     D.DoB, D.Ward, D.DateTimeDemographics, D.Age, ISNULL(SD.Site,'') AS Site, I.OrganismGroup, I.OrganismName, I.IsolateNumber
 FROM         demographics AS D INNER JOIN Isolates AS I ON D.SampleID = I.SampleID INNER JOIN SiteDetails50 AS SD ON D.SampleID = SD.SampleID
 WHERE     D.SampleID = '8314528'

/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '8314528'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314528'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '8314528'
/*21/12/2023 3:03:23 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT I.SampleID, COALESCE(I.IsolateNumber, 1) IsolateNumber, COALESCE(I.OrganismGroup, '') OrganismGroup, COALESCE(I.OrganismName, '') OrganismName, COALESCE(I.Qualifier, '') Qualifier, COALESCE(I.UserName, '') UserName, COALESCE(I.RecordDateTime, '1/1/1900') RecordDateTime, COALESCE(PV.Valid, 0) Valid, COALESCE(PV.Printed, 0) Printed FROM Isolates I LEFT JOIN PrintValidLog PV ON I.SampleID = PV.SampleID WHERE I.SampleID = '8314528' ORDER BY I.IsolateNumber
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '8314528' and Valid = 1
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50 F WHERE F.SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT F.SampleID, F.DayIndex, F.Result, F.UserName, F.DateTimeOfRecord FROM FaecesWorkSheets50Audit F WHERE F.SampleID = '8314528' ORDER BY F.DateTimeOfRecord desc
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/Select * from ConsultantList Order by SampleID
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM Isolates WHERE SampleID = '8314527'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(FOB, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RotaAdeno, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CDiff, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(OP, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CSF, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RSV, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(RedSub, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM PrintedStatus WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesRepeats WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM IsolatesArc WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesRepeats WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID FROM SensitivitiesArc WHERE SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Reports WHERE SampleID = '8314528' AND Dept = 'Microbiology'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE COALESCE(ForMicro, 0) <> 0 AND SampleID = '8314528'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM BiomnisRequests WHERE SampleID = 8314528
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'EnableMicroNotepad'
/*21/12/2023 3:03:24 PM ; K Gregg ; 6.12.146 ;*/SELECT TOP 1 ReportType FROM REPORTS WHERE SampleID ='8314528' ORDER BY PRINTTIME DESC
/*21/12/2023 3:03:28 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 3:03:28 PM ; K Gregg ; 6.12.146 ;*/Select * from PatientIFs where Chart = '16' and (Entity = '01' OR Entity = 'CGH')
/*21/12/2023 3:03:28 PM ; K Gregg ; 6.12.146 ;*/select top 1 * from demographics where Chart = '16' and Hospital = 'Cavan' order by RecordDateTime desc
/*21/12/2023 3:03:32 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'DEMOGRAPHICSNAMECAPS'
/*21/12/2023 3:03:32 PM ; K Gregg ; 6.12.146 ;*/SELECT Sex FROM SexNames WHERE Name = ''
/*21/12/2023 3:03:45 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 3:03:45 PM ; K Gregg ; 6.12.146 ;*/Select [Text] from Wards where HospitalCode = 'C' and Inuse = 1 and (Code = 'GP' or [Text] = 'GP')
/*21/12/2023 3:03:59 PM ; K Gregg ; 6.12.146 ;*/SELECT Text, Code, Addr0, Addr1, Title, ForeName, SurName, Phone, FAX, Practice, HospitalCode, COALESCE(ListOrder, 999) ListOrder, MCNumber, COALESCE(InUse, 1) InUse, COALESCE(Compiled, 1) Compiled, COALESCE(HealthLink, 1) Healthlink, COALESCE(PrintReport, 1) PrintReport, COALESCE(AutoCC, 0) AutoCC, COALESCE(Interim, 0) Interim, COALESCE(PracticeNumber, '') PracticeNumber FROM GPs WHERE  ISNULL(InUse,0) = 1 AND (Code = '' OR Text = '')
/*21/12/2023 3:03:59 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 3:03:59 PM ; K Gregg ; 6.12.146 ;*/SELECT AutoCC FROM GPs WHERE HospitalCode = 'C' AND Text = '' and AutoCC = 1 
/*21/12/2023 3:04:01 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 3:04:01 PM ; K Gregg ; 6.12.146 ;*/Select [Text] from Wards where HospitalCode = 'C' and Inuse = 1 and (Code = 'Coronary Care Unit' or [Text] = 'Coronary Care Unit')
/*21/12/2023 3:04:04 PM ; K Gregg ; 6.12.146 ;*/Select * from Lists where ListType = 'HO' and Text = 'CAVAN' and InUse = 1
/*21/12/2023 3:04:04 PM ; K Gregg ; 6.12.146 ;*/Select * from Clinicians where (Code = 'MR NASIR AWAN' or Text = 'MR NASIR AWAN') and InUse = 1And HospitalCode = 'C' and InUse = 1
/*21/12/2023 3:04:04 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '8314528'
/*21/12/2023 3:04:07 PM ; K Gregg ; 6.12.146 ;*/Delete from UrineRequests50 where SampleID = '8314528'
/*21/12/2023 3:04:07 PM ; K Gregg ; 6.12.146 ;*/INSERT INTO UrineRequests50 (SampleID, Request, UserName) VALUES ('8314528',  'CS',  'K Gregg')
/*21/12/2023 3:04:07 PM ; K Gregg ; 6.12.146 ;*/INSERT INTO UrineRequests50 (SampleID, Request, UserName) VALUES ('8314528',  'Pregnancy',  'K Gregg')
/*21/12/2023 3:04:07 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'HealthLinkDeptMicro'
/*21/12/2023 3:04:07 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '8314528'
/*21/12/2023 3:04:07 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314528'
/*21/12/2023 3:04:07 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '8314528'
/*21/12/2023 3:04:07 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '8314528'
/*21/12/2023 3:04:07 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Request, UserName, DateTimeOfRecord FROM UrineRequests50 WHERE SampleID = '8314528'
/*21/12/2023 3:04:07 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM UrineResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314528'
/*21/12/2023 3:04:07 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, Code TestName, Result FROM SedimaxResults WHERE SampleID = '8314528'
/*21/12/2023 3:04:07 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(Microscopy, 0) AS Status FROM LockStatus WHERE SampleID = '8314528'
/*21/12/2023 3:04:07 PM ; K Gregg ; 6.12.146 ;*/SELECT COUNT(*) Tot FROM Demographics WHERE SampleID = '8314528'
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroDemSave'
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/select Top 1 ISNULL(LabNo,0) as LabNo  from DemographicsUniLabNo As D   WHERE ISNULL(LabNo,0)  <> 0 AND  D.PatName='TEST PAT2' AND DoB = '15/Apr/1990' ORDER BY DateTimeOfRecord DESC 
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/Select MAX(CAST(LabNo AS FLOAT)) as MaxID from demographics
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/SELECT Contents FROM Options WHERE Description = 'ReservedLabID'
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/IF EXISTS (SELECT * FROM Options WHERE            Description = 'ReservedLabID')   UPDATE Options   SET Contents = '18317292'   WHERE Description = 'ReservedLabID' ELSE   INSERT INTO Options (Description, Contents) VALUES   ('ReservedLabID',   '18317292')
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/insert into DemographicsUniLabNo (SampleID, [User], PatName, DoB, Sex, Chart, LabNo,DateTimeOfRecord ) Values (
'','K Gregg','TEST PAT2','1990-04-15','Female','16',18317292,'2023-12-21 15:04:21')
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/IF EXISTS (SELECT * FROM SiteDetails50 WHERE            SampleID = '8314528')   UPDATE SiteDetails50   SET Site = 'Urine',   SiteDetails = 'MSU',   UserName = 'K Gregg'   WHERE SampleID = '8314528' ELSE   INSERT INTO SiteDetails50 (SampleID, Site, SiteDetails, UserName)   VALUES   ('8314528',   'Urine',   'MSU',   'K Gregg')
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/SELECT S.SampleID, S.IsolateNumber, LTRIM(RTRIM(S.AntibioticCode)) AntibioticCode, LTRIM(RTRIM(A.AntibioticName)) AntibioticName, LTRIM(RTRIM(COALESCE(S.Result, ''))) Result, COALESCE(S.Report, 0) Report, LTRIM(RTRIM(COALESCE(S.CPOFlag, ''))) CPOFlag, S.RunDate, S.RunDateTime, LTRIM(RTRIM(COALESCE(S.RSI, ''))) RSI, COALESCE(S.UserCode, '') UserCode, COALESCE(S.Forced, 0) Forced, COALESCE(S.Secondary, 0) Secondary, COALESCE(S.Valid, 0) Valid, S.AuthoriserCode, DateTimeOfRecord FROM Sensitivities S JOIN Antibiotics A ON S.AntibioticCode = A.Code WHERE S.SampleID = '8314528' ORDER BY A.ListOrder
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/Select count(Valid) as tot from PrintValidLog where SampleID = '8314528' and Valid = 1
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/Select Distinct AntibioticName, ListOrder from Antibiotics where AntibioticName <> '' order by ListOrder
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/SELECT COALESCE(CandS, 0) AS Status FROM LockStatus WHERE SampleID = '8314528'
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/Select * from Demographics where SampleID = '8314528'
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/update Demographics set DateTimeDemographics = '21/Dec/2023 15:04:21' where SampleID = '8314528' and DateTimeDemographics is null
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/Select top 10 * from MRU where UserCode = 'KJG' Order by DateTime desc
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/Delete from MRU where UserCode = 'KJG'
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('8314527', '21/Dec/2023 15:03:03', 'KJG')
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('11', '21/Dec/2023 14:51:09', 'KJG')
/*21/12/2023 3:04:21 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('10', '21/Dec/2023 14:50:02', 'KJG')
/*21/12/2023 3:04:22 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('9', '20/Dec/2023 15:51:39', 'KJG')
/*21/12/2023 3:04:22 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('8', '20/Dec/2023 15:37:26', 'KJG')
/*21/12/2023 3:04:22 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000030', '28/Nov/2023 16:14:08', 'KJG')
/*21/12/2023 3:04:22 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000029', '27/Nov/2023 21:44:15', 'KJG')
/*21/12/2023 3:04:22 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('83000028', '23/Nov/2023 20:36:17', 'KJG')
/*21/12/2023 3:04:22 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('3777528', '23/Nov/2023 14:51:57', 'KJG')
/*21/12/2023 3:04:22 PM ; K Gregg ; 6.12.146 ;*/Insert into MRU (SampleID, DateTime, UserCode ) VALUES ('8314528', '21/Dec/2023 15:04:22', 'KJG')
/*21/12/2023 3:04:22 PM ; K Gregg ; 6.12.146 ;*/Select top 10 * from MRU where UserCode = 'KJG' Order by DateTime desc
/*21/12/2023 3:04:22 PM ; K Gregg ; 6.12.146 ;*/Select RID from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '8314528'
/*21/12/2023 3:04:22 PM ; K Gregg ; 6.12.146 ;*/Select RID from ocmQuestions R  Inner Join OCMRequestDetails D ON D.RequestID = R.RID  Where D.SampleID = '8314528'
/*21/12/2023 3:04:28 PM ; K Gregg ; 6.12.146 ;*/SELECT * FROM UserRole WHERE MemberOf = 'Manager' AND SystemRole = 'MicroLists'
/*21/12/2023 3:04:28 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM GenericResults G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314528'
/*21/12/2023 3:04:28 PM ; K Gregg ; 6.12.146 ;*/SELECT G.SampleID, G.TestName, G.Result, COALESCE(G.HealthLink, 0) Healthlink, G.UserName, G.DateTimeOfRecord, COALESCE(P.Valid, 0) Valid, COALESCE(P.Printed, 0) Printed, P.ValidatedBy, P.ValidatedDateTime, P.PrintedBy, P.PrintedDateTime FROM FaecesResults50 G LEFT JOIN PrintValidLog P ON G.SampleID = P.SampleID WHERE G.SampleID = '8314528'
/*21/12/2023 3:04:28 PM ; K Gregg ; 6.12.146 ;*/SELECT SampleID, TestName, Isolate, Result, UserName, DateTimeOfRecord FROM UrineIdent50 WHERE SampleID = '8314528'
/*21/12/2023 3:04:28 PM ; K Gregg ; 6.12.146 ;*/SELECT Valid FROM PrintValidLog WHERE SampleID = '8314528' AND Department = 'M' AND Valid = 1
