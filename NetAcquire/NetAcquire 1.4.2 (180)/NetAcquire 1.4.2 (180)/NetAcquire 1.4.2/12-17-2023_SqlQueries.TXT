/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagTestDefinitions'')     AND name = ''PrintRefRange'')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD PrintRefRange tinyint NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''PrintRefRange'' in table ''CoagTestDefinitions'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagTestDefinitions'')     AND name = ''PrintRefRange'')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD PrintRefRange tinyint NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''PrintRefRange'' in table ''CoagTestDefinitions'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''UserName'')   BEGIN     ALTER TABLE GenericResults     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''UserName'' in table ''GenericResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''UserName'')   BEGIN     ALTER TABLE GenericResults     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''UserName'' in table ''GenericResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE GenericResults     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''DateTimeOfRecord'' in table ''GenericResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE GenericResults     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''DateTimeOfRecord'' in table ''GenericResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''Valid'')   BEGIN     ALTER TABLE GenericResults     ADD Valid tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Valid'' in table ''GenericResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''Valid'')   BEGIN     ALTER TABLE GenericResults     ADD Valid tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Valid'' in table ''GenericResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''ValidatedBy'')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ValidatedBy'' in table ''GenericResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''ValidatedBy'')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ValidatedBy'' in table ''GenericResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ValidatedDateTime'' in table ''GenericResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GenericResults'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE GenericResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ValidatedDateTime'' in table ''GenericResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''UserName'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''UserName'' in table ''ExternalDefinitions'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''UserName'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''UserName'' in table ''ExternalDefinitions'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''DateTimeOfRecord'' in table ''ExternalDefinitions'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''DateTimeOfRecord'' in table ''ExternalDefinitions'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''Department'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD Department nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Department'' in table ''ExternalDefinitions'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''Department'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD Department nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Department'' in table ''ExternalDefinitions'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''eAddress'')     AND name = ''ListOrder'')   BEGIN     ALTER TABLE eAddress     ADD ListOrder int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ListOrder'' in table ''eAddress'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''eAddress'')     AND name = ''ListOrder'')   BEGIN     ALTER TABLE eAddress     ADD ListOrder int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ListOrder'' in table ''eAddress'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''eAddress'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE eAddress     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''DateTimeOfRecord'' in table ''eAddress'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''eAddress'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE eAddress     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''DateTimeOfRecord'' in table ''eAddress'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''eAddress'')     AND name = ''UserName'')   BEGIN     ALTER TABLE eAddress     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''UserName'' in table ''eAddress'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''eAddress'')     AND name = ''UserName'')   BEGIN     ALTER TABLE eAddress     ADD UserName nvarchar(50)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''UserName'' in table ''eAddress'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Sensitivities'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE Sensitivities     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''DateTimeOfRecord'' in table ''Sensitivities'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Sensitivities'')     AND name = ''DateTimeOfRecord'')   BEGIN     ALTER TABLE Sensitivities     ADD DateTimeOfRecord datetime DEFAULT getdate()     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''DateTimeOfRecord'' in table ''Sensitivities'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Reports'')     AND name = ''Hidden'')   BEGIN     ALTER TABLE Reports     ADD Hidden tinyint NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Hidden'' in table ''Reports'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Reports'')     AND name = ''Hidden'')   BEGIN     ALTER TABLE Reports     ADD Hidden tinyint NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Hidden'' in table ''Reports'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ValidatedDateTime'' in table ''FaecesResults50'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ValidatedDateTime'' in table ''FaecesResults50'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''PrintedDateTime'')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''PrintedDateTime'' in table ''FaecesResults50'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''PrintedDateTime'')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''PrintedDateTime'' in table ''FaecesResults50'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''ValidatedBy'')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ValidatedBy'' in table ''FaecesResults50'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''ValidatedBy'')   BEGIN     ALTER TABLE FaecesResults50     ADD ValidatedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ValidatedBy'' in table ''FaecesResults50'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''PrintedBy'')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''PrintedBy'' in table ''FaecesResults50'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesResults50'')     AND name = ''PrintedBy'')   BEGIN     ALTER TABLE FaecesResults50     ADD PrintedBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''PrintedBy'' in table ''FaecesResults50'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioTestDefinitions'')     AND name = ''HealthLinkPanel'')   BEGIN     ALTER TABLE BioTestDefinitions     ADD HealthLinkPanel nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''HealthLinkPanel'' in table ''BioTestDefinitions'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioTestDefinitions'')     AND name = ''HealthLinkPanel'')   BEGIN     ALTER TABLE BioTestDefinitions     ADD HealthLinkPanel nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''HealthLinkPanel'' in table ''BioTestDefinitions'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRequests'')     AND name = ''AddOn'')   BEGIN     ALTER TABLE BioRequests     ADD AddOn bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''AddOn'' in table ''BioRequests'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRequests'')     AND name = ''AddOn'')   BEGIN     ALTER TABLE BioRequests     ADD AddOn bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''AddOn'' in table ''BioRequests'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PhoneLog'')     AND name = ''Direction'')   BEGIN     ALTER TABLE PhoneLog     ADD Direction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Direction'' in table ''PhoneLog'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PhoneLog'')     AND name = ''Direction'')   BEGIN     ALTER TABLE PhoneLog     ADD Direction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Direction'' in table ''PhoneLog'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Antibiotics'')     AND name = ''ViewInGrid'')   BEGIN     ALTER TABLE Antibiotics     ADD ViewInGrid bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ViewInGrid'' in table ''Antibiotics'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Antibiotics'')     AND name = ''ViewInGrid'')   BEGIN     ALTER TABLE Antibiotics     ADD ViewInGrid bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ViewInGrid'' in table ''Antibiotics'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPs'')     AND name = ''PrintReport'')   BEGIN     ALTER TABLE GPs     ADD PrintReport bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''PrintReport'' in table ''GPs'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPs'')     AND name = ''PrintReport'')   BEGIN     ALTER TABLE GPs     ADD PrintReport bit NOT NULL DEFAULT 1     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''PrintReport'' in table ''GPs'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPs'')     AND name = ''Interim'')   BEGIN     ALTER TABLE GPs     ADD Interim bit NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Interim'' in table ''GPs'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPs'')     AND name = ''Interim'')   BEGIN     ALTER TABLE GPs     ADD Interim bit NOT NULL DEFAULT 0     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Interim'' in table ''GPs'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Counter'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Counter numeric(18, 0) IDENTITY(1,1) NOT NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Counter'' in table ''MedibridgeResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Counter'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Counter numeric(18, 0) IDENTITY(1,1) NOT NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Counter'' in table ''MedibridgeResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Analyte'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Analyte nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Analyte'' in table ''MedibridgeResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Analyte'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Analyte nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Analyte'' in table ''MedibridgeResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Chart'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Chart nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Chart'' in table ''MedibridgeResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Chart'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Chart nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Chart'' in table ''MedibridgeResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''FileName'')   BEGIN     ALTER TABLE MedibridgeResults     ADD FileName nvarchar(500) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''FileName'' in table ''MedibridgeResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''FileName'')   BEGIN     ALTER TABLE MedibridgeResults     ADD FileName nvarchar(500) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''FileName'' in table ''MedibridgeResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Units'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Units nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Units'' in table ''MedibridgeResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''MedibridgeResults'')     AND name = ''Units'')   BEGIN     ALTER TABLE MedibridgeResults     ADD Units nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Units'' in table ''MedibridgeResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Demographics'')     AND name = ''MicroHealthLinkReleaseTime'')   BEGIN     ALTER TABLE Demographics     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''MicroHealthLinkReleaseTime'' in table ''Demographics'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Demographics'')     AND name = ''MicroHealthLinkReleaseTime'')   BEGIN     ALTER TABLE Demographics     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''MicroHealthLinkReleaseTime'' in table ''Demographics'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''DemographicsAudit'')     AND name = ''MicroHealthLinkReleaseTime'')   BEGIN     ALTER TABLE DemographicsAudit     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''MicroHealthLinkReleaseTime'' in table ''DemographicsAudit'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''DemographicsAudit'')     AND name = ''MicroHealthLinkReleaseTime'')   BEGIN     ALTER TABLE DemographicsAudit     ADD MicroHealthLinkReleaseTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''MicroHealthLinkReleaseTime'' in table ''DemographicsAudit'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''BiomnisCode'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD BiomnisCode nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''BiomnisCode'' in table ''ExternalDefinitions'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ExternalDefinitions'')     AND name = ''BiomnisCode'')   BEGIN     ALTER TABLE ExternalDefinitions     ADD BiomnisCode nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''BiomnisCode'' in table ''ExternalDefinitions'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''AnalyserTestCodeMapping'')     AND name = ''Department'')   BEGIN     ALTER TABLE AnalyserTestCodeMapping     ADD Department nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Department'' in table ''AnalyserTestCodeMapping'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''AnalyserTestCodeMapping'')     AND name = ''Department'')   BEGIN     ALTER TABLE AnalyserTestCodeMapping     ADD Department nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Department'' in table ''AnalyserTestCodeMapping'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BIOTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''BIOTestDefinitions'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BIOTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''BIOTestDefinitions'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioTestDefinitionsArc'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE BioTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''BioTestDefinitionsArc'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioTestDefinitionsArc'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE BioTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''BioTestDefinitionsArc'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''CoagTestDefinitions'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE CoagTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''CoagTestDefinitions'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''EndTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE EndTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''EndTestDefinitions'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''EndTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE EndTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''EndTestDefinitions'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''EndTestDefinitionsArc'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE EndTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''EndTestDefinitionsArc'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''EndTestDefinitionsArc'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE EndTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''EndTestDefinitionsArc'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''HaemTestDefinitions'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''HaemTestDefinitions'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE ImmTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''ImmTestDefinitions'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmTestDefinitions'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE ImmTestDefinitions     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''ImmTestDefinitions'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmTestDefinitionsArc'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE ImmTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''ImmTestDefinitionsArc'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmTestDefinitionsArc'')     AND name = ''DeltaDaysBackLimit'')   BEGIN     ALTER TABLE ImmTestDefinitionsArc     ADD DeltaDaysBackLimit Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''DeltaDaysBackLimit'' in table ''ImmTestDefinitionsArc'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureListEntryExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureListEntryExists',            '30',            'IF NOT EXISTS     (SELECT * FROM Lists WHERE     Code = ''B''     AND Text = ''Biomnis''     AND ListType = ''AC'')   BEGIN     INSERT INTO Lists (Code, Text, ListType, InUse, ListOrder)     VALUES (''B'', ''Biomnis'', ''AC'', ''1'', 999)   END ELSE   SELECT 0 AS RetVal',            'The SELECT permission was denied on the object ''Lists'', database ''Cavan'', schema ''dbo''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM Lists WHERE     Code = ''B''     AND Text = ''Biomnis''     AND ListType = ''AC'')   BEGIN     INSERT INTO Lists (Code, Text, ListType, InUse, ListOrder)     VALUES (''B'', ''Biomnis'', ''AC'', ''1'', 999)   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'The SELECT permission was denied on the object ''Lists'', database ''Cavan'', schema ''dbo''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureListEntryExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE CoagResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ValidateTime'' in table ''CoagResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE CoagResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ValidateTime'' in table ''CoagResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ValidateTime'' in table ''BioResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioResults     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ValidateTime'' in table ''BioResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE HaemRepeats50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ValidateTime'' in table ''HaemRepeats50'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE HaemRepeats50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ValidateTime'' in table ''HaemRepeats50'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ValidateTime'' in table ''BioResultsAudit'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ValidateTime'' in table ''BioResultsAudit'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ValidateTime'' in table ''BioResultsAudit'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioResultsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ValidateTime'' in table ''BioResultsAudit'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRequestsAudit'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioRequestsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ValidateTime'' in table ''BioRequestsAudit'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRequestsAudit'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioRequestsAudit     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ValidateTime'' in table ''BioRequestsAudit'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BIOTestDefinitions'')     AND name = ''HealthLink'')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD HealthLink Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''HealthLink'' in table ''BIOTestDefinitions'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BIOTestDefinitions'')     AND name = ''HealthLink'')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD HealthLink Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''HealthLink'' in table ''BIOTestDefinitions'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BIOTestDefinitions'')     AND name = ''Accredited'')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD Accredited Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Accredited'' in table ''BIOTestDefinitions'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BIOTestDefinitions'')     AND name = ''Accredited'')   BEGIN     ALTER TABLE BIOTestDefinitions     ADD Accredited Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Accredited'' in table ''BIOTestDefinitions'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE HaemResults50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ValidateTime'' in table ''HaemResults50'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE HaemResults50     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ValidateTime'' in table ''HaemResults50'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''demographics'')     AND name = ''LabNo'')   BEGIN     ALTER TABLE demographics     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''LabNo'' in table ''demographics'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''demographics'')     AND name = ''LabNo'')   BEGIN     ALTER TABLE demographics     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''LabNo'' in table ''demographics'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''demographicsAudit'')     AND name = ''LabNo'')   BEGIN     ALTER TABLE demographicsAudit     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''LabNo'' in table ''demographicsAudit'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''demographicsAudit'')     AND name = ''LabNo'')   BEGIN     ALTER TABLE demographicsAudit     ADD LabNo nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''LabNo'' in table ''demographicsAudit'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''MedRenal'')   BEGIN     ALTER TABLE BioRepeats     ADD MedRenal tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''MedRenal'' in table ''BioRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''MedRenal'')   BEGIN     ALTER TABLE BioRepeats     ADD MedRenal tinyint NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''MedRenal'' in table ''BioRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE BioRepeats     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ValidatedDateTime'' in table ''BioRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE BioRepeats     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ValidatedDateTime'' in table ''BioRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE BioResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ValidatedDateTime'' in table ''BioResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''ValidatedDateTime'')   BEGIN     ALTER TABLE BioResults     ADD ValidatedDateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ValidatedDateTime'' in table ''BioResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioRepeats     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ValidateTime'' in table ''BioRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''ValidateTime'')   BEGIN     ALTER TABLE BioRepeats     ADD ValidateTime datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ValidateTime'' in table ''BioRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRequests'')     AND name = ''GBottle'')   BEGIN     ALTER TABLE BioRequests     ADD GBottle Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''GBottle'' in table ''BioRequests'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRequests'')     AND name = ''GBottle'')   BEGIN     ALTER TABLE BioRequests     ADD GBottle Int     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''GBottle'' in table ''BioRequests'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOff'' in table ''HaemResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOff'' in table ''HaemResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffBy'' in table ''HaemResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffBy'' in table ''HaemResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''HaemResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''HaemResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemResults50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOff'' in table ''HaemResults50'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemResults50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOff'' in table ''HaemResults50'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffBy'' in table ''HaemResults50'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffBy'' in table ''HaemResults50'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''HaemResults50'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemResults50'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemResults50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''HaemResults50'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOff'' in table ''HaemRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOff'' in table ''HaemRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffBy'' in table ''HaemRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffBy'' in table ''HaemRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''HaemRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''HaemRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOff'' in table ''HaemRepeats50'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOff'' in table ''HaemRepeats50'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffBy'' in table ''HaemRepeats50'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffBy'' in table ''HaemRepeats50'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''HaemRepeats50'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemRepeats50'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE HaemRepeats50     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''HaemRepeats50'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''TempHaem'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE TempHaem     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOff'' in table ''TempHaem'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''TempHaem'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE TempHaem     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOff'' in table ''TempHaem'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''TempHaem'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE TempHaem     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffBy'' in table ''TempHaem'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''TempHaem'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE TempHaem     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffBy'' in table ''TempHaem'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''TempHaem'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE TempHaem     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''TempHaem'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''TempHaem'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE TempHaem     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''TempHaem'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE BioResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOff'' in table ''BioResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE BioResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOff'' in table ''BioResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE BioResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffBy'' in table ''BioResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE BioResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffBy'' in table ''BioResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE BioResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''BioResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE BioResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''BioResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE BioRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOff'' in table ''BioRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE BioRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOff'' in table ''BioRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffBy'' in table ''BioRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffBy'' in table ''BioRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''BioRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE BioRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''BioRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOff'' in table ''BioResultsAudit'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOff'' in table ''BioResultsAudit'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffBy'' in table ''BioResultsAudit'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffBy'' in table ''BioResultsAudit'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''BioResultsAudit'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''BioResultsAudit'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE BioResultsAudit     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''BioResultsAudit'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE CoagResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOff'' in table ''CoagResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE CoagResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOff'' in table ''CoagResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE CoagResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffBy'' in table ''CoagResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE CoagResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffBy'' in table ''CoagResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE CoagResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''CoagResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE CoagResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''CoagResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOff'' in table ''CoagRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOff'' in table ''CoagRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffBy'' in table ''CoagRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffBy'' in table ''CoagRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''CoagRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''CoagRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE CoagRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''CoagRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE ImmResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOff'' in table ''ImmResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmResults'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE ImmResults     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOff'' in table ''ImmResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE ImmResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffBy'' in table ''ImmResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmResults'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE ImmResults     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffBy'' in table ''ImmResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE ImmResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''ImmResults'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmResults'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE ImmResults     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''ImmResults'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOff'' in table ''ImmRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmRepeats'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOff'' in table ''ImmRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffBy'' in table ''ImmRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmRepeats'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffBy'' in table ''ImmRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''ImmRepeats'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ImmRepeats'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE ImmRepeats     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''ImmRepeats'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLog'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOff'' in table ''PrintValidLog'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLog'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOff'' in table ''PrintValidLog'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLog'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffBy'' in table ''PrintValidLog'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLog'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffBy'' in table ''PrintValidLog'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLog'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''PrintValidLog'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLog'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE PrintValidLog     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''PrintValidLog'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLogArc'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOff'' in table ''PrintValidLogArc'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLogArc'')     AND name = ''SignOff'')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOff bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOff'' in table ''PrintValidLogArc'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLogArc'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffBy'' in table ''PrintValidLogArc'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLogArc'')     AND name = ''SignOffBy'')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffBy nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffBy'' in table ''PrintValidLogArc'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLogArc'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''PrintValidLogArc'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintValidLogArc'')     AND name = ''SignOffDateTime'')   BEGIN     ALTER TABLE PrintValidLogArc     ADD SignOffDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SignOffDateTime'' in table ''PrintValidLogArc'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesRequests50'')     AND name = ''Analyser'')   BEGIN     ALTER TABLE FaecesRequests50     ADD Analyser nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Analyser'' in table ''FaecesRequests50'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesRequests50'')     AND name = ''Analyser'')   BEGIN     ALTER TABLE FaecesRequests50     ADD Analyser nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Analyser'' in table ''FaecesRequests50'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesRequests50'')     AND name = ''Programmed'')   BEGIN     ALTER TABLE FaecesRequests50     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Programmed'' in table ''FaecesRequests50'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''FaecesRequests50'')     AND name = ''Programmed'')   BEGIN     ALTER TABLE FaecesRequests50     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Programmed'' in table ''FaecesRequests50'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:55 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ViewedReports'')     AND name = ''Usercode'')   BEGIN     ALTER TABLE ViewedReports     ADD Usercode nvarchar(5)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Usercode'' in table ''ViewedReports'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''ViewedReports'')     AND name = ''Usercode'')   BEGIN     ALTER TABLE ViewedReports     ADD Usercode nvarchar(5)     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Usercode'' in table ''ViewedReports'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemTestDefinitions'')     AND name = ''KnownToAnalyser'')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD KnownToAnalyser bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''KnownToAnalyser'' in table ''HaemTestDefinitions'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''HaemTestDefinitions'')     AND name = ''KnownToAnalyser'')   BEGIN     ALTER TABLE HaemTestDefinitions     ADD KnownToAnalyser bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''KnownToAnalyser'' in table ''HaemTestDefinitions'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintPending'')     AND name = ''PrintAction'')   BEGIN     ALTER TABLE PrintPending     ADD PrintAction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''PrintAction'' in table ''PrintPending'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PrintPending'')     AND name = ''PrintAction'')   BEGIN     ALTER TABLE PrintPending     ADD PrintAction nvarchar(50) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''PrintAction'' in table ''PrintPending'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPOrders'')     AND name = ''Programmed'')   BEGIN     ALTER TABLE GPOrders     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''Programmed'' in table ''GPOrders'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPOrders'')     AND name = ''Programmed'')   BEGIN     ALTER TABLE GPOrders     ADD Programmed bit NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''Programmed'' in table ''GPOrders'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPOrders'')     AND name = ''SampleDate'')   BEGIN     ALTER TABLE GPOrders     ADD SampleDate datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''SampleDate'' in table ''GPOrders'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''GPOrders'')     AND name = ''SampleDate'')   BEGIN     ALTER TABLE GPOrders     ADD SampleDate datetime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''SampleDate'' in table ''GPOrders'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PhoneAlert'')     AND name = ''PhoneAlertDateTime'')   BEGIN     ALTER TABLE PhoneAlert     ADD PhoneAlertDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''PhoneAlertDateTime'' in table ''PhoneAlert'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''PhoneAlert'')     AND name = ''PhoneAlertDateTime'')   BEGIN     ALTER TABLE PhoneAlert     ADD PhoneAlertDateTime DateTime NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''PhoneAlertDateTime'' in table ''PhoneAlert'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'EnsureColumnExists'      AND ErrorLineNumber = '30'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'EnsureColumnExists',            '30',            'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Reports'')     AND name = ''ReportType'')   BEGIN     ALTER TABLE Reports     ADD ReportType nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',            'Column names in each table must be unique. Column name ''ReportType'' in table ''Reports'' is specified more than once.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'IF NOT EXISTS     (SELECT * FROM syscolumns WHERE     id = object_id(''Reports'')     AND name = ''ReportType'')   BEGIN     ALTER TABLE Reports     ADD ReportType nvarchar(20) NULL     SELECT 1 AS RetVal   END ELSE   SELECT 0 AS RetVal',   ErrorDescription = 'Column names in each table must be unique. Column name ''ReportType'' in table ''Reports'' is specified more than once.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'EnsureColumnExists'   AND ErrorLineNumber = '30'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'ScanViewLog'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckScanViewLogInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckScanViewLogInDb',            '40',            'CREATE TABLE [dbo].[ScanViewLog]( [SampleID] [nvarchar](50) NULL, [ScanName] [nvarchar](50) NULL, [Department] [nvarchar](50) NULL, [Viewed] [int] NULL, [Username] [nvarchar](50) NULL, [DateTimeOfRecord] [datetime] NULL, [Counter] [int] IDENTITY(1,1) NOT NULL ) ON [PRIMARY]',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[ScanViewLog]( [SampleID] [nvarchar](50) NULL, [ScanName] [nvarchar](50) NULL, [Department] [nvarchar](50) NULL, [Viewed] [int] NULL, [Username] [nvarchar](50) NULL, [DateTimeOfRecord] [datetime] NULL, [Counter] [int] IDENTITY(1,1) NOT NULL ) ON [PRIMARY]',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckScanViewLogInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'UserProfiles'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckUserProfilesInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckUserProfilesInDb',            '40',            'CREATE TABLE UserProfiles ( ProfileName nvarchar(50),   ProfileFunction nvarchar(50),   UserName nvarchar(50),   DateTimeOfRecord datetime DEFAULT getdate() )',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE UserProfiles ( ProfileName nvarchar(50),   ProfileFunction nvarchar(50),   UserName nvarchar(50),   DateTimeOfRecord datetime DEFAULT getdate() )',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckUserProfilesInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTResults'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckPOCTResultsInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckPOCTResultsInDb',            '40',            'CREATE TABLE [dbo].[POCTResults](   [Parameter] [nvarchar](50) NULL,   [Result] [nvarchar](100) NULL,   [Units] [nvarchar](50) NULL,   [PatientUI] [nvarchar](50) NULL,   [DateTimeOfRecord] [datetime] NOT NULL DEFAULT getdate(),   [Chart] [nvarchar](50) NULL,   [FileName] [nvarchar](100) NULL )',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[POCTResults](   [Parameter] [nvarchar](50) NULL,   [Result] [nvarchar](100) NULL,   [Units] [nvarchar](50) NULL,   [PatientUI] [nvarchar](50) NULL,   [DateTimeOfRecord] [datetime] NOT NULL DEFAULT getdate(),   [Chart] [nvarchar](50) NULL,   [FileName] [nvarchar](100) NULL )',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckPOCTResultsInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatientLive'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckPOCTPatientLiveInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckPOCTPatientLiveInDb',            '40',            'CREATE TABLE [dbo].[POCTPatientLive](   [Chart] [nvarchar](50) NULL,   [ForeName] [nvarchar](50) NULL,   [Surname] [nvarchar](50) NULL,   [AlternateID] [nvarchar](50) NULL,   [AccountNo] [nvarchar](50) NULL,   [Visit] [nvarchar](50) NULL,   [Sex] [nvarchar](50) NULL,   [DoB] [smalldatetime] NULL,   [Location] [nvarchar](50) NULL,   [Doctor] [nvarchar](50) NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[POCTPatientLive](   [Chart] [nvarchar](50) NULL,   [ForeName] [nvarchar](50) NULL,   [Surname] [nvarchar](50) NULL,   [AlternateID] [nvarchar](50) NULL,   [AccountNo] [nvarchar](50) NULL,   [Visit] [nvarchar](50) NULL,   [Sex] [nvarchar](50) NULL,   [DoB] [smalldatetime] NULL,   [Location] [nvarchar](50) NULL,   [Doctor] [nvarchar](50) NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckPOCTPatientLiveInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatients'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckPOCTPatientsInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckPOCTPatientsInDb',            '40',            'CREATE TABLE [dbo].[POCTPatients](   [Chart] [nvarchar](50) NULL,   [ForeName] [nvarchar](50) NULL,   [Surname] [nvarchar](50) NULL,   [AlternateID] [nvarchar](50) NULL,   [AccountNo] [nvarchar](50) NULL,   [Visit] [nvarchar](50) NULL,   [Sex] [nvarchar](50) NULL,   [DoB] [smalldatetime] NULL,   [Location] [nvarchar](50) NULL,   [Doctor] [nvarchar](50) NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[POCTPatients](   [Chart] [nvarchar](50) NULL,   [ForeName] [nvarchar](50) NULL,   [Surname] [nvarchar](50) NULL,   [AlternateID] [nvarchar](50) NULL,   [AccountNo] [nvarchar](50) NULL,   [Visit] [nvarchar](50) NULL,   [Sex] [nvarchar](50) NULL,   [DoB] [smalldatetime] NULL,   [Location] [nvarchar](50) NULL,   [Doctor] [nvarchar](50) NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckPOCTPatientsInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'POCTPatientTemp'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckPOCTPatientTempInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckPOCTPatientTempInDb',            '40',            'CREATE TABLE [dbo].[POCTPatientTemp](   [Chart] [nvarchar](50) NULL,   [ForeName] [nvarchar](50) NULL,   [Surname] [nvarchar](50) NULL,   [AlternateID] [nvarchar](50) NULL,   [AccountNo] [nvarchar](50) NULL,   [Visit] [nvarchar](50) NULL,   [Sex] [nvarchar](50) NULL,   [DoB] [smalldatetime] NULL,   [Location] [nvarchar](50) NULL,   [Doctor] [nvarchar](50) NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[POCTPatientTemp](   [Chart] [nvarchar](50) NULL,   [ForeName] [nvarchar](50) NULL,   [Surname] [nvarchar](50) NULL,   [AlternateID] [nvarchar](50) NULL,   [AccountNo] [nvarchar](50) NULL,   [Visit] [nvarchar](50) NULL,   [Sex] [nvarchar](50) NULL,   [DoB] [smalldatetime] NULL,   [Location] [nvarchar](50) NULL,   [Doctor] [nvarchar](50) NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckPOCTPatientTempInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'LIHValues'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckLIHValuesInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckLIHValuesInDb',            '40',            'CREATE TABLE [dbo].[LIHValues](   [LIH] nvarchar(50) NOT NULL,   [Code] nvarchar(50) NOT NULL,   [CutOff] real NOT NULL DEFAULT 0,   [NoPrintOrWarning] nvarchar(50) NOT NULL,   [UserName] nvarchar(50) NOT NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[LIHValues](   [LIH] nvarchar(50) NOT NULL,   [Code] nvarchar(50) NOT NULL,   [CutOff] real NOT NULL DEFAULT 0,   [NoPrintOrWarning] nvarchar(50) NOT NULL,   [UserName] nvarchar(50) NOT NULL,   [DateTimeOfRecord] datetime NOT NULL DEFAULT getdate() )',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckLIHValuesInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'IncludeAutoValUrine'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckIncludeAutoValUrineInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckIncludeAutoValUrineInDb',            '40',            'CREATE TABLE [IncludeAutoValUrine] ([SourceType] [nvarchar] (50) NOT NULL, [Hospital] [nvarchar] (50) NOT NULL, [SourceName] [nvarchar] (50) NOT NULL, [Include] [bit] NOT NULL DEFAULT 0, [Counter] [numeric](18, 0) IDENTITY (1, 1) NOT NULL )',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [IncludeAutoValUrine] ([SourceType] [nvarchar] (50) NOT NULL, [Hospital] [nvarchar] (50) NOT NULL, [SourceName] [nvarchar] (50) NOT NULL, [Include] [bit] NOT NULL DEFAULT 0, [Counter] [numeric](18, 0) IDENTITY (1, 1) NOT NULL )',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckIncludeAutoValUrineInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'UserRole'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckUserRoleInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckUserRoleInDb',            '40',            'CREATE TABLE [dbo].[UserRole]( [MemberOf] [nvarchar](50) NULL, [SystemRole] [nvarchar](50) NULL, [Description] [nvarchar](50) NULL, [Enabled] [tinyint] NULL, [Username] [nvarchar](50) NULL, [DateTimeOfRecord] [datetime] NULL, [Counter] [int] IDENTITY(1,1) NOT NULL ) ON [PRIMARY]',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[UserRole]( [MemberOf] [nvarchar](50) NULL, [SystemRole] [nvarchar](50) NULL, [Description] [nvarchar](50) NULL, [Enabled] [tinyint] NULL, [Username] [nvarchar](50) NULL, [DateTimeOfRecord] [datetime] NULL, [Counter] [int] IDENTITY(1,1) NOT NULL ) ON [PRIMARY]',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckUserRoleInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GPOrders'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckGPOrdersInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckGPOrdersInDb',            '40',            'CREATE TABLE GPOrders (  ShortName nvarchar(20) NULL,LongName nvarchar(50) NULL,ClinicalDetails nvarchar(20) NULL,SampleTypeCode nvarchar(20) NULL,SampleType nvarchar(50) NULL,Priority nvarchar(10) NULL,GID nvarchar(50) NULL,FileName nvarchar(50) NULL,SampleIDExternal nvarchar(50) NULL, SampleDate [datetime] NULL )',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE GPOrders (  ShortName nvarchar(20) NULL,LongName nvarchar(50) NULL,ClinicalDetails nvarchar(20) NULL,SampleTypeCode nvarchar(20) NULL,SampleType nvarchar(50) NULL,Priority nvarchar(10) NULL,GID nvarchar(50) NULL,FileName nvarchar(50) NULL,SampleIDExternal nvarchar(50) NULL, SampleDate [datetime] NULL )',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckGPOrdersInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GPOrderPatient'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckGPOrderPatientInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckGPOrderPatientInDb',            '40',            'CREATE TABLE GPOrderPatient (  [GPName] [nvarchar](20) NULL, [GPNumber] [nvarchar](10) NULL, [DateTimeOfMessage] [datetime] NULL, [PatientID] [nvarchar](10) NULL, [PatientSurName] [nvarchar](20) NULL, [PatientForeName] [nvarchar](20) NULL, [DoB] [date] NULL, [Sex] [nvarchar](6) NULL, [Addr1] [nvarchar](20) NULL, [Addr2] [nvarchar](20) NULL, [Addr3] [nvarchar](20) NULL, [Addr4] [nvarchar](20) NULL, [Addr5] [nvarchar](20) NULL, [PracticeID] [nvarchar](10) NULL, [GPSurName] [nvarchar](20) NULL, [GPForeName] [nvarchar](20) NULL, [Pregnant] [nvarchar](25) NULL, [GID] [nvarchar](50) NULL, [FileName] [nvarchar](50) NULL, [SampleIDExternal] [nvarchar](50) NULL )',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE GPOrderPatient (  [GPName] [nvarchar](20) NULL, [GPNumber] [nvarchar](10) NULL, [DateTimeOfMessage] [datetime] NULL, [PatientID] [nvarchar](10) NULL, [PatientSurName] [nvarchar](20) NULL, [PatientForeName] [nvarchar](20) NULL, [DoB] [date] NULL, [Sex] [nvarchar](6) NULL, [Addr1] [nvarchar](20) NULL, [Addr2] [nvarchar](20) NULL, [Addr3] [nvarchar](20) NULL, [Addr4] [nvarchar](20) NULL, [Addr5] [nvarchar](20) NULL, [PracticeID] [nvarchar](10) NULL, [GPSurName] [nvarchar](20) NULL, [GPForeName] [nvarchar](20) NULL, [Pregnant] [nvarchar](25) NULL, [GID] [nvarchar](50) NULL, [FileName] [nvarchar](50) NULL, [SampleIDExternal] [nvarchar](50) NULL )',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckGPOrderPatientInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'GpordersProfile'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckGpordersProfileInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckGpordersProfileInDb',            '40',            'CREATE TABLE GpordersProfile(GPTestCode nvarchar(200) NULL, GPTestName nvarchar(200) NULL, Department nvarchar(200) NULL, NetAcquirePanel nvarchar(200) NULL, Counter int NULL, Panel bit NULL )',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE GpordersProfile(GPTestCode nvarchar(200) NULL, GPTestName nvarchar(200) NULL, Department nvarchar(200) NULL, NetAcquirePanel nvarchar(200) NULL, Counter int NULL, Panel bit NULL )',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckGpordersProfileInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'HaePanels'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckHaePanelsInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckHaePanelsInDb',            '40',            'CREATE TABLE [dbo].[HaePanels](  [PanelName] [nvarchar](50) NULL,  [Content] [nvarchar](50) NULL,  [BarCode] [nvarchar](20) NULL,  [PanelType] [nvarchar](2) NULL,  [Hospital] [char](10) NULL,  [ListOrder] [int] NULL  ) ON [PRIMARY]',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[HaePanels](  [PanelName] [nvarchar](50) NULL,  [Content] [nvarchar](50) NULL,  [BarCode] [nvarchar](20) NULL,  [PanelType] [nvarchar](2) NULL,  [Hospital] [char](10) NULL,  [ListOrder] [int] NULL  ) ON [PRIMARY]',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckHaePanelsInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'DemographicsUniLabNo'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckDemographicsUniLabNoInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckDemographicsUniLabNoInDb',            '40',            'CREATE TABLE [dbo].[DemographicsUniLabNo] ([SampleID] [nvarchar](20) NOT NULL, [DateTimeOfRecord] [datetime] NOT NULL, [User] [nvarchar](200) NOT NULL, [PatName] [nvarchar](200) NOT NULL, [DoB] [datetime] NOT NULL, [Sex] [nvarchar](10) NOT NULL, [Chart] [nvarchar](20), [LabNo] [numeric](18, 0) )ON [PRIMARY]',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[DemographicsUniLabNo] ([SampleID] [nvarchar](20) NOT NULL, [DateTimeOfRecord] [datetime] NOT NULL, [User] [nvarchar](200) NOT NULL, [PatName] [nvarchar](200) NOT NULL, [DoB] [datetime] NOT NULL, [Sex] [nvarchar](10) NOT NULL, [Chart] [nvarchar](20), [LabNo] [numeric](18, 0) )ON [PRIMARY]',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckDemographicsUniLabNoInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'frmMain'      AND ProcedureName = 'AdjustLIH'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('frmMain',            'AdjustLIH',            '40',            'SELECT TOP 50 * FROM Masks WHERE LIH IS NULL',            'The SELECT permission was denied on the object ''Masks'', database ''Cavan'', schema ''dbo''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'SELECT TOP 50 * FROM Masks WHERE LIH IS NULL',   ErrorDescription = 'The SELECT permission was denied on the object ''Masks'', database ''Cavan'', schema ''dbo''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'frmMain'   AND ProcedureName = 'AdjustLIH'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modOptions'      AND ProcedureName = 'LoadOptions'      AND ErrorLineNumber = '70'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modOptions',            'LoadOptions',            '70',            'Select * from Options order by ListOrder',            'The SELECT permission was denied on the object ''Options'', database ''Cavan'', schema ''dbo''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'Select * from Options order by ListOrder',   ErrorDescription = 'The SELECT permission was denied on the object ''Options'', database ''Cavan'', schema ''dbo''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modOptions'   AND ProcedureName = 'LoadOptions'   AND ErrorLineNumber = '70'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'Shared'      AND ProcedureName = 'FillInterpTable'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('Shared',            'FillInterpTable',            '40',            'select * from interp',            'The SELECT permission was denied on the object ''interp'', database ''Cavan'', schema ''dbo''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'select * from interp',   ErrorDescription = 'The SELECT permission was denied on the object ''interp'', database ''Cavan'', schema ''dbo''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'Shared'   AND ProcedureName = 'FillInterpTable'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'DemogValidation'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'BiomnisRequests'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckBiomnisRequestInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckBiomnisRequestInDb',            '40',            'CREATE TABLE [dbo].[BiomnisRequests]( [SampleID] [nvarchar](50) NOT NULL, [TestCode] [nvarchar](50) NOT NULL, [TestName] [nvarchar](50) NULL, [SampleType] [nvarchar](50) NULL, [SampleDateTime] [datetime] NULL, [Department] [nvarchar](50) NULL, [RequestedBy] [nvarchar](50) NULL, [SendTo] [nvarchar](200) NULL, [Status] [nvarchar](50) NULL, DateTimeOfRecord datetime NOT NULL DEFAULT getdate() ) ON [PRIMARY]',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[BiomnisRequests]( [SampleID] [nvarchar](50) NOT NULL, [TestCode] [nvarchar](50) NOT NULL, [TestName] [nvarchar](50) NULL, [SampleType] [nvarchar](50) NULL, [SampleDateTime] [datetime] NULL, [Department] [nvarchar](50) NULL, [RequestedBy] [nvarchar](50) NULL, [SendTo] [nvarchar](200) NULL, [Status] [nvarchar](50) NULL, DateTimeOfRecord datetime NOT NULL DEFAULT getdate() ) ON [PRIMARY]',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckBiomnisRequestInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'ConsultantListLog'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckConsultantListInDb'      AND ErrorLineNumber = '0'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckConsultantListInDb',            '0',            'CREATE TABLE [dbo].[ConsultantListLog]( [SampleID] [nvarchar](50) NOT NULL, [UserName] [nvarchar](50) NOT NULL, [Status] [nvarchar](50) NULL, DateTimeOfRecord datetime NOT NULL DEFAULT getdate() ) ON [PRIMARY]',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[ConsultantListLog]( [SampleID] [nvarchar](50) NOT NULL, [UserName] [nvarchar](50) NOT NULL, [Status] [nvarchar](50) NULL, DateTimeOfRecord datetime NOT NULL DEFAULT getdate() ) ON [PRIMARY]',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckConsultantListInDb'   AND ErrorLineNumber = '0'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/SELECT name FROM sysobjects WHERE xtype = 'U' AND name = 'MicroAutoCommentAlert'
/*17/12/2023 9:46:56 PM ;  ; 6.12.146 ;*/IF NOT EXISTS     (SELECT * FROM ErrorLog WHERE      ModuleName = 'modDbDesign'      AND ProcedureName = 'CheckMicroAutoCommentAlertInDb'      AND ErrorLineNumber = '40'      AND AppName = 'NetAcquire'      AND AppVersion = '6-12-146' )   INSERT INTO ErrorLog (    ModuleName, ProcedureName, ErrorLineNumber, SQLStatement,     ErrorDescription, UserName, MachineName, Eventdesc, AppName, AppVersion, EventCounter, eMailed)   VALUES  ('modDbDesign',            'CheckMicroAutoCommentAlertInDb',            '40',            'CREATE TABLE [dbo].[MicroAutoCommentAlert]( [OrganismName] [nvarchar](100) NOT NULL, [Site] [nvarchar](50) NULL, [PatientLocation] [nvarchar](100) NULL, [PatientAgeFrom] [int] NULL, [PatientAgeTo] [int] NULL, [DateStart] [smalldatetime] NULL, [DateEnd] [smalldatetime] NULL, [Comment] [nvarchar](95) NULL, [PhoneAlert] [bit] NULL, [PhoneAlertDateTime] [datetime] NULL, [ListOrder] [int] NOT NULL, [Counter] [int] IDENTITY(1,1) NOT NULL ) ON [PRIMARY]',            'CREATE TABLE permission denied in database ''Cavan''.',            '',            'JUNAID',            '',            'NetAcquire',            '6-12-146',            '1', '0') ELSE   UPDATE ErrorLog   SET SQLStatement = 'CREATE TABLE [dbo].[MicroAutoCommentAlert]( [OrganismName] [nvarchar](100) NOT NULL, [Site] [nvarchar](50) NULL, [PatientLocation] [nvarchar](100) NULL, [PatientAgeFrom] [int] NULL, [PatientAgeTo] [int] NULL, [DateStart] [smalldatetime] NULL, [DateEnd] [smalldatetime] NULL, [Comment] [nvarchar](95) NULL, [PhoneAlert] [bit] NULL, [PhoneAlertDateTime] [datetime] NULL, [ListOrder] [int] NOT NULL, [Counter] [int] IDENTITY(1,1) NOT NULL ) ON [PRIMARY]',   ErrorDescription = 'CREATE TABLE permission denied in database ''Cavan''.',   MachineName = 'JUNAID',   DateTime = getdate(),   UserName = '',   EventCounter = COALESCE(EventCounter, 0) + 1   WHERE ModuleName = 'modDbDesign'   AND ProcedureName = 'CheckMicroAutoCommentAlertInDb'   AND ErrorLineNumber = '40'   AND AppName = 'NetAcquire'   AND AppVersion = '6-12-146'
